#! ------------------------
#!! GENERAL CONFIGURATION
#!! -------------------------

[General]
#Set to True or False to display debug messages
Debug: True

MVAtype = DNN

electronMVA = <!General|electronMVA80!>

[Configuration]
channel              = Wlv

[SubmitOptions]
submitScriptSpecialOptions = {'sysnew': ' -l h_vmem=6g '}

[Analysis]

tag  = 13TeV

# BDT to discriminate Signal and Background
#!! If this Flag is used then 50% of MC samples will go in training and the rest will be scaled up by a factor of 2.
#!! if you train on 50% but then set it to 'False' while writing DC, then you get your biased training samples in the limit!!!
#!! be sure to have this right !!!
;#When computing SF from CR, set this flag to false
;if one wants to use Mjj -> put to False
;Rescale MC by factor 2 if true
TrainFlag = True

;Current BDT FOM: Cls of train/vs CLs of test sample. To produce the DC on train sample, set this flag to True.
;!!!IMPORTANT: BE SURE TO HAVE "UseTrainSample = False" WHEN COMPUTING THE FINAL LIMIT !!!
UseTrainSample = False

;ALWAYS set to False, unless training to produce correlation plots
Data_as_signal = False


[Prep]
Step1           = ['VHbbCommon.Clean','VHbbCommon.JetSmearer','VHbbCommon.JECcorrelator','Prep.LeptonSelection']
LeptonSelection = VHbbSelection.VHbbSelection(year="2017", channels=["Wln"], idWmn=None, idWen=None, skipJetSelection=True, vpt0lep=130.0, vpt1lep=110.0, vpt2lep=75.0)

Step2           = ['VHbbCommon.METXY','Prep.Selection', 'VHbbCommon.isData','VHbbCommon.isSignal','VHbbCommon.isWH','VHbbCommon.HeppyStyleGen','VHbbCommon.genBstatus','Prep.newBranches','VHbbCommon.VReco'] 

VHbb = ['VHbbCommon.Clean','VHbbCommon.mSD_sys_2017','VHbbCommon.JetSmearer','VHbbCommon.METXY','Prep.Selection', 'VHbbCommon.isData','VHbbCommon.isSignal','VHbbCommon.isWH','VHbbCommon.HeppyStyleGen','VHbbCommon.genBstatus','Prep.newBranches','VHbbCommon.VReco']
Selection = VHbbSelection.VHbbSelection(year="2017", channels=["Wln"], idWmn=None, idWen=None)

# new branches
newBranches = BranchTools.TreeFormulas({
    'Lepton_pt':  'Alt$((Vtype==2)*Muon_pt[vLidx[0]],0)   + Alt$((Vtype==3)*Electron_pt[vLidx[0]],0)',
    'Lepton_phi': 'Alt$((Vtype==2)*Muon_phi[vLidx[0]],0)  + Alt$((Vtype==3)*Electron_phi[vLidx[0]],0)',
    'Lepton_eta': 'Alt$((Vtype==2)*Muon_eta[vLidx[0]],0)  + Alt$((Vtype==3)*Electron_eta[vLidx[0]],0)',
    'nAddLep15_2p5':      {'formula':'Sum$(Muon_pt>15&&abs(Muon_eta)<2.5&&Muon_pfRelIso04_all<0.1&&((Vtype==3)||(Iteration$!=(vLidx[0]))))+Sum$(Electron_pt>15&&abs(Electron_eta)<2.5&&Electron_pfRelIso03_all<0.1&&((Vtype==2)||(Iteration$!=(vLidx[0]))))', 'type':'i'},
    'nAddLep20_2p5':      {'formula':'Sum$(Muon_pt>20&&abs(Muon_eta)<2.5&&Muon_pfRelIso04_all<0.1&&((Vtype==3)||(Iteration$!=(vLidx[0]))))+Sum$(Electron_pt>20&&abs(Electron_eta)<2.5&&Electron_pfRelIso03_all<0.1&&((Vtype==2)||(Iteration$!=(vLidx[0]))))', 'type':'i'},
    'nAddLep25_2p5':      {'formula':'Sum$(Muon_pt>25&&abs(Muon_eta)<2.5&&Muon_pfRelIso04_all<0.1&&((Vtype==3)||(Iteration$!=(vLidx[0]))))+Sum$(Electron_pt>25&&abs(Electron_eta)<2.5&&Electron_pfRelIso03_all<0.1&&((Vtype==2)||(Iteration$!=(vLidx[0]))))', 'type':'i'},
    'nAddLep15':          {'formula':'Sum$(Muon_pt>15&&Muon_pfRelIso04_all<0.1&&((Vtype==3)||(Iteration$!=(vLidx[0]))))+Sum$(Electron_pt>15&&Electron_pfRelIso03_all<0.1&&((Vtype==2)||(Iteration$!=(vLidx[0]))))', 'type':'i'},
    'nAddLep20':          {'formula':'Sum$(Muon_pt>20&&Muon_pfRelIso04_all<0.1&&((Vtype==3)||(Iteration$!=(vLidx[0]))))+Sum$(Electron_pt>20&&Electron_pfRelIso03_all<0.1&&((Vtype==2)||(Iteration$!=(vLidx[0]))))', 'type':'i'},
    'nAddLep25':          {'formula':'Sum$(Muon_pt>25&&Muon_pfRelIso04_all<0.1&&((Vtype==3)||(Iteration$!=(vLidx[0]))))+Sum$(Electron_pt>25&&Electron_pfRelIso03_all<0.1&&((Vtype==2)||(Iteration$!=(vLidx[0]))))', 'type':'i'},
    'htJet30': {'formula': 'Sum$(Jet_Pt*(Jet_Pt >30 && Jet_puId > 0 && Jet_lepFilter))', 'type': 'f'},
    'dPhiLepMet':   {'formula': 'abs(TVector2::Phi_mpi_pi(MET_Phi-(Alt$((Vtype==2)*Muon_phi[vLidx[0]],0) + Alt$((Vtype==3)*Electron_phi[vLidx[0]],0))))', 'type': 'f'},
    'dPhiLepMetv2': {'formula': 'abs(VHbb::deltaPhi(MET_Phi,(Alt$((Vtype==2)*Muon_phi[vLidx[0]],0) + Alt$((Vtype==3)*Electron_phi[vLidx[0]],0))))', 'type': 'f'},
    })

# this overwrites the Vtype from post-processor!
#RecomputeVtypeNoIso = vLeptons.vLeptons(recomputeVtype=True, isoWen=999999.9, isoWmn=999999.9)

;;;;
;FOR SYS
;;;;
[Sys]
# then, add Sys.all afterwards
#all = ['VHbbCommon.SampleGroup','VHbbCommon.HiggsReco','VHbbCommon.FitCorr','VHbbCommon.EWKweights','VHbbCommon.BTagSF','VHbbCommon.DYspecialWeight','Sys.electronSF','Sys.muonSF','VHbbCommon.LOtoNLOweight','VHbbCommon.JetPUIDSF','VHbbCommon.DoubleBtagSF','Sys.GetTopMass']
all = ['VHbbCommon.SampleGroup','VHbbCommon.HiggsReco','VHbbCommon.FitCorr','VHbbCommon.EWKweights','VHbbCommon.BTagSF','VHbbCommon.DYspecialWeight','Sys.electronSF','Sys.muonSF','VHbbCommon.LOtoNLOweightV7','VHbbCommon.JetPUIDSF','VHbbCommon.DoubleBtagSF','Sys.GetTopMass']
boostedFlags = ['VHbbCommon.isBoosted','VHbbCommon.isBoostedVZ']

topAndVreco = ['Sys.GetTopMass']
topReco = ['Sys.GetTopMass']

electronSF = ElectronSFfromJSON.ElectronSFfromJSON(jsonFiles=['data/Run2ElectronSF/Trig2017passingSingleEle.json', 'data/Run2ElectronSF/IDs2017passingMVA94Xwp80iso.json',  'data/Wlv/Electrons/ScaleFactor_etracker_80x.json'], branchName='electronSF',channel='Wlv')
muonSF = MuonSFfromJSON.MuonSFfromJSON(jsonFiles=['data/Run2MuonSF/vhbb_SingleMuon_EfficienciesAndSFMu17LegTRG_2017MC.json','data/Run2MuonSF/vhbb_SingleMuon_EfficienciesAndSFMu17LegTRG_2017Data.json','data/Run2MuonSF/vhbb_SingleMuon_EfficienciesAndSFMu8LegTRG_2017MC.json','data/Run2MuonSF/vhbb_SingleMuon_EfficienciesAndSFMu8LegTRG_2017Data.json','data/Run2MuonSF/vhbb_SingleMuon_EfficienciesAndSFID_2017.json','data/Run2MuonSF/vhbb_SingleMuon_EfficienciesAndSFISO_2017.json','data/Run2MuonSF/vhbb_SingleMuon_EfficienciesAndSFTRG_2017.json'], channel='Wlv',year=2017)


# additional reconstruction of variables for DNN input
GetTopMass = GetTopMass.GetTopMass(nano=True, propagateJES=True, METmethod=2, minbTag=<!General|btagWP_Loose!>, branchName='top_mass2_05')
#GetTopMassNominal = GetTopMass.GetTopMass(nano=True, propagateJES=False, METmethod=2, minbTag=<!General|btagWP_Loose!>, branchName='top_mass2_05')
#GetWTMass = GetWTMass.GetWTMass(nano=True,branchName="V_mt")

[Eval]
weightAsBranch = WeightAsBranch.WeightAsBranch()

# DNNs
# Eval.VH,Eval.VZ,Eval.weightAsBranch
all = <!Eval|VH!> + <!Eval|BOOSTED!> + <!Eval|VZ!> + <!Eval|VZ_BOOSTED!>
#all = <!Eval|BOOSTED!> + <!Eval|VZ_BOOSTED!>
VH = ['Eval.SR_medhigh_Wln', 'Eval.Whf_high_Wln', 'Eval.Whf_med_Wln']
VV = <!.|VZ!>
VZ = ['Eval.VV_SR_medhigh_Wln','Eval.VV_Whf_med_Wln','Eval.VV_Whf_high_Wln']
BOOSTED = ['Eval.BDT_Wlv_BOOSTFinal_wdB']
#BOOSTEDmod = <!.|BOOSTB!>

VZ_BOOSTED = ['Eval.BDT_VZ_Wlv_BOOSTFinal_wdB']

VHLegacyDNNs   = ['Eval.SR_medhigh_Wln','Eval.Whf_high_Wln','Eval.Whf_med_Wln','VHbbCommon.isBoosted']

# resolved
SR_medhigh_Wln = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='SR_medhigh_Wln',condition='hJidx[0]>-1&&hJidx[1]>-1')
Whf_high_Wln   = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Whf_high_Wln',condition='hJidx[0]>-1&&hJidx[1]>-1')
Whf_med_Wln    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Whf_med_Wln',condition='hJidx[0]>-1&&hJidx[1]>-1')

# boosted
BDT_Wlv_BOOSTFinal_wdB    = tmvaEvaluator.tmvaEvaluator(mvaName='BDT_Wlv_BOOSTFinal_wdB',condition='Hbb_fjidx>-1')
BDT_VZ_Wlv_BOOSTFinal_wdB = tmvaEvaluator.tmvaEvaluator(mvaName='BDT_VZ_Wlv_BOOSTFinal_wdB',condition='Hbb_fjidx>-1')

#BDT_Wlv_BOOSTFinal_wdB_test = tmvaEvaluator.tmvaEvaluator(mvaName='BDT_Wlv_BOOSTFinal_wdB_test',condition='Hbb_fjidx>-1')

# resolved VZ
VV_SR_medhigh_Wln = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_SR_medhigh_Wln',condition='hJidx[0]>-1&&hJidx[1]>-1')
VV_Whf_med_Wln    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_Whf_med_Wln',condition='hJidx[0]>-1&&hJidx[1]>-1')
VV_Whf_high_Wln   = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_Whf_high_Wln',condition='hJidx[0]>-1&&hJidx[1]>-1')

# mjj analysis
mjj                = ['Eval.Mjj_SR_medhigh_Wmn', 'Eval.Mjj_SR_medhigh_Wen']
Mjj_SR_medhigh_Wmn = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Mjj_SR_medhigh_Wmn')
Mjj_SR_medhigh_Wen = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Mjj_SR_medhigh_Wen')

# multi
multiDNN = ['Eval.Multi_medhigh_Wln']
Multi_medhigh_Wln = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Multi_medhigh_Wln',condition='hJidx[0]>-1&&hJidx[1]>-1')
Multi_high_Wln_BOOST = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Multi_high_Wln_BOOST',condition='Hbb_fjidx>-1')

# BOOSTED analysis BDT
WlvBDTBOOSTVarsFinal_wdB = tmvaEvaluator.tmvaEvaluator(mvaName='WlvBDTBOOSTVarsFinal_wdB',condition='Hbb_fjidx>-1')

#Need this for the plotting
[VHbbNameSpace]
library=<!Directories|vhbbpath!>/interface/VHbbNameSpace_h.so

[Weights]

#----- Nominal -----#

puWeight         = puWeight
genWeight        = genWeight

#muonWeight       = muonSF[0]
muonWeight       = 1.0 
electronWeight   = electronSF[0]
leptonWeight     = <!Weights|muonWeight!>*<!Weights|electronWeight!>
# the old behavior can be reproduced with: --set='General.DeepAK8weightApplies=(isBoosted)'
doubleBtagWeight = (1.0+<!General|DeepAK8weightApplies!>*(-1.0+bTagWeightDoubleB))
bTagWeight       = (1.0+<!General|resolvedBtagWeightApplies!>*(-1.0+bTagWeight<!General|btagMethod!>))
#bTagWeight       = bTagWeightDeepCSV
EWKweight        = EWKw[0]

#fitCorr          = FitCorr[0]
#fitCorr          = (1.0 + (sampleIndex>200&&sampleIndex<205) * (-1.0 + FitCorr[0]))
fitCorr          = 1.0

; use the per sample defined special weight from config
;When True, uses special weight from samples_nosplit.ini, otherwise brom branch DY_specialWeight
useSpecialWeight = True

# set the stitching weight accordingly 
stitchingWeights_False  = DY_specialWeight
stitchingWeights_True   = 1.0
stitchingWeights        = <!Weights|stitchingWeights_<!.|useSpecialWeight!>!>

#weightNLO        = weightLOtoNLO
#weightNLO        = weightLOtoNLO_2016
#weightNLO         = weightLOtoNLO_LHEVptV2
#weightNLO         = weightLOtoNLO_LHEVptV2b
#weightNLO         = weightLOtoNLO_LHEVptV6
weightNLO         = weightLOtoNLO_LHEVptV7

weightJetPUID    = weightJetPUID
weightNaddJetsResidual = 1.0 

PrefireWeight    = PrefireWeight

additionalCorrection = 1.0 

weightF     = <!Weights|genWeight!>*<!Weights|puWeight!>*<!Weights|leptonWeight!>*<!Weights|bTagWeight!>*<!Weights|EWKweight!>*<!Weights|fitCorr!>*<!Weights|weightNLO!>*<!Weights|stitchingWeights!> * <!Weights|additionalCorrection!> * <!Weights|weightJetPUID!> * <!Weights|weightNaddJetsResidual!> * <!Weights|PrefireWeight!> * <!Weights|doubleBtagWeight!>

#----- partial weights -----#
;
weight_noBTag    = <!.|weightF!>/(<!Weights|bTagWeight!>)
weight_noLepSF   = <!.|weightF!>/(<!Weights|leptonWeight!>)
weight_noEWK     = <!.|weightF!>/(<!Weights|EWKweight!>) 
weight_noNLO     = <!.|weightF!>/(<!Weights|weightNLO!>) 

# can be 0
weight_noPU      = <!Weights|genWeight!>*<!Weights|leptonWeight!>*<!Weights|bTagWeight!>*<!Weights|EWKweight!>*<!Weights|fitCorr!>*<!Weights|weightNLO!>*<!Weights|stitchingWeights!> * <!Weights|additionalCorrection!> * <!Weights|weightJetPUID!> * <!Weights|weightNaddJetsResidual!> * <!Weights|PrefireWeight!> * <!Weights|doubleBtagWeight!>

; _ _ _ _ _ _ _ _ _
;* * * * * * * * * *|
;  Weight sys  |
;_*_*_*_*_*_*_*_*_*_|


CMS_vhbb_ttbar_nAddJets_UP   = <!Weights|weightF!>*<!Weights|weightNaddJetsResidual!>
CMS_vhbb_ttbar_nAddJets_DOWN = <!Weights|weightF!>/<!Weights|weightNaddJetsResidual!>

CMS_vhbb_jetPUID_UP   = <!Weights|weightF!>/<!Weights|weightJetPUID!>*weightJetPUID_Up
CMS_vhbb_jetPUID_DOWN = <!Weights|weightF!>/<!Weights|weightJetPUID!>*weightJetPUID_Down

CMS_vhbb_vjetnlovptrw_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_Up
CMS_vhbb_vjetnlovptrw_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_Down

# NLO weight uncertainty, HT-binned samples
CMS_vhbb_vjetnlovptrw_ZJets0_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZJets0_Up
CMS_vhbb_vjetnlovptrw_ZJets0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZJets0_Down
CMS_vhbb_vjetnlovptrw_ZJets1_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZJets1_Up
CMS_vhbb_vjetnlovptrw_ZJets1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZJets1_Down
CMS_vhbb_vjetnlovptrw_ZJets2_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZJets2_Up
CMS_vhbb_vjetnlovptrw_ZJets2_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZJets2_Down
CMS_vhbb_vjetnlovptrw_WJets0_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WJets0_Up
CMS_vhbb_vjetnlovptrw_WJets0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WJets0_Down
CMS_vhbb_vjetnlovptrw_WJets1_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WJets1_Up
CMS_vhbb_vjetnlovptrw_WJets1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WJets1_Down
CMS_vhbb_vjetnlovptrw_WJets2_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WJets2_Up
CMS_vhbb_vjetnlovptrw_WJets2_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WJets2_Down
CMS_vhbb_vjetnlovptrw_DYJets0_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYJets0_Up
CMS_vhbb_vjetnlovptrw_DYJets0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYJets0_Down
CMS_vhbb_vjetnlovptrw_DYJets1_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYJets1_Up
CMS_vhbb_vjetnlovptrw_DYJets1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYJets1_Down
CMS_vhbb_vjetnlovptrw_DYJets2_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYJets2_Up
CMS_vhbb_vjetnlovptrw_DYJets2_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYJets2_Down

# NLO weight uncertainty b-enriched samples
CMS_vhbb_vjetnlovptrw_ZBJets1_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZBJets1_Up
CMS_vhbb_vjetnlovptrw_ZBJets1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZBJets1_Down
CMS_vhbb_vjetnlovptrw_ZBJets2_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZBJets2_Up
CMS_vhbb_vjetnlovptrw_ZBJets2_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_ZBJets2_Down
CMS_vhbb_vjetnlovptrw_WBJets1_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WBJets1_Up
CMS_vhbb_vjetnlovptrw_WBJets1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WBJets1_Down
CMS_vhbb_vjetnlovptrw_WBJets2_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WBJets2_Up
CMS_vhbb_vjetnlovptrw_WBJets2_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_WBJets2_Down
CMS_vhbb_vjetnlovptrw_DYBJets1_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYBJets1_Up
CMS_vhbb_vjetnlovptrw_DYBJets1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYBJets1_Down
CMS_vhbb_vjetnlovptrw_DYBJets2_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYBJets2_Up
CMS_vhbb_vjetnlovptrw_DYBJets2_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*<!Weights|weightNLO!>_DYBJets2_Down


# TODO: remove fit corr uncertainty
CMS_vhbb_topptreweighting_13TeV_DOWN: <!Weights|weightF!>
CMS_vhbb_topptreweighting_13TeV_UP:   <!Weights|weightF!> 
FitCorrection_DOWN:                   <!Weights|weightF!> 
FitCorrection_UP:                     <!Weights|weightF!>
FitCorrectionHF_DOWN:                 <!Weights|weightF!>
FitCorrectionHF_UP:                   <!Weights|weightF!>

# prefire correction
CMS_vhbb_PrefireWeight_13TeV_UP   = <!Weights|weightF!>/<!Weights|PrefireWeight!>*PrefireWeight_Up
CMS_vhbb_PrefireWeight_13TeV_DOWN = <!Weights|weightF!>/<!Weights|PrefireWeight!>*PrefireWeight_Down

#----- Electron SF -----#
CMS_vhbb_eff_e_trigger_Wlv_13TeV_DOWN:   <!Weights|weightF!>/electronSF_trigger[0]*electronSF_trigger[1]
CMS_vhbb_eff_e_MVAID_Wlv_13TeV_DOWN:     <!Weights|weightF!>/electronSF_IdIso[0]*electronSF_IdIso[1]

CMS_vhbb_eff_e_trigger_Wlv_13TeV_UP:   <!Weights|weightF!>/electronSF_trigger[0]*electronSF_trigger[2]
CMS_vhbb_eff_e_MVAID_Wlv_13TeV_UP:     <!Weights|weightF!>/electronSF_IdIso[0]*electronSF_IdIso[2]

#----- Muon SF ----#
CMS_vhbb_eff_m_Wln_13TeV_DOWN: <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF[1]
CMS_vhbb_eff_m_Wln_13TeV_UP: <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF[2]

CMS_vhbb_eff_m_trigger_Wlv_13TeV_DOWN: <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF_Iso[0]*muonSF_Id[0]*muonSF_trigger[1]
CMS_vhbb_eff_m_ISO_Wlv_13TeV_DOWN:     <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF_Iso[1]*muonSF_Id[0]*muonSF_trigger[0]
CMS_vhbb_eff_m_MVAID_Wlv_13TeV_DOWN:   <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF_Iso[0]*muonSF_Id[1]*muonSF_trigger[0]

CMS_vhbb_eff_m_trigger_Wlv_13TeV_UP: <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF_Iso[0]*muonSF_Id[0]*muonSF_trigger[2]
CMS_vhbb_eff_m_ISO_Wlv_13TeV_UP:     <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF_Iso[2]*muonSF_Id[0]*muonSF_trigger[0]
CMS_vhbb_eff_m_MVAID_Wlv_13TeV_UP:   <!Weights|weight_noLepSF!>*<!Weights|electronWeight!>*muonSF_Iso[0]*muonSF_Id[2]*muonSF_trigger[0]


CMS_vhbb_VjetsBenriched_WBJets_2017_13TeV_UP:  <!.|weightF!>*(1.0+(int(sampleIndex/100)==50||int(sampleIndex/100)==51)*(0.05))
CMS_vhbb_VjetsBenriched_WBJets_2017_13TeV_DOWN:  <!.|weightF!>*(1.0+(int(sampleIndex/100)==50||int(sampleIndex/100)==51)*(-0.05))

CMS_vhbb_VjetsBenriched_WJetsBGenFilter_2017_13TeV_UP:  <!.|weightF!>*(1.0+(int(sampleIndex/100)==53||int(sampleIndex/100)==54)*(0.05))
CMS_vhbb_VjetsBenriched_WJetsBGenFilter_2017_13TeV_DOWN:  <!.|weightF!>*(1.0+(int(sampleIndex/100)==53||int(sampleIndex/100)==54)*(-0.05))

CMS_vhbb_VjetsBenriched_WBJets_RW = ((LHE_Nb==0)+(LHE_Nb==1)*(7.3172e-01+9.1698e-04*min(LHE_Vpt,3.6375e+02)-7.1699e-07*min(LHE_Vpt,3.6375e+02)**2)+(LHE_Nb>1)*(8.3246e-01+1.2162e-03*min(LHE_Vpt,4.3390e+02)-1.7882e-06*min(LHE_Vpt,4.3390e+02)**2)) 
CMS_vhbb_VjetsBenriched_WBJets_RW_2017_13TeV_UP:  <!.|weightF!>*(1.0+(int(sampleIndex/100)==50||int(sampleIndex/100)==51)*(-1.0 + <!.|CMS_vhbb_VjetsBenriched_WBJets_RW!>))
CMS_vhbb_VjetsBenriched_WBJets_RW_2017_13TeV_DOWN:  <!.|weightF!>*(1.0+(int(sampleIndex/100)==50||int(sampleIndex/100)==51)*(-1.0 + 1.0/<!.|CMS_vhbb_VjetsBenriched_WBJets_RW!>))
CMS_vhbb_Vjets_WBJets_RW_2017_13TeV_UP:  <!.|weightF!>*(<!.|CMS_vhbb_VjetsBenriched_WBJets_RW!>)
CMS_vhbb_Vjets_WBJets_RW_2017_13TeV_DOWN:  <!.|weightF!>*(1.0/<!.|CMS_vhbb_VjetsBenriched_WBJets_RW!>)

CMS_vhbb_VjetsBenriched_WJetsBGenFilter_RW = (1.1463e+00+2.0053e-03*min(LHE_Vpt,300.0)-3.0822e-06*min(LHE_Vpt,300.0)**2-5.8023e-04*min(1200.0,max(LHE_Vpt,300.0))) 
CMS_vhbb_VjetsBenriched_WJetsBGenFilter_RW_2017_13TeV_UP: <!.|weightF!>*(1.0+(int(sampleIndex/100)==141||int(sampleIndex/100)==142)*(-1.0 + <!.|CMS_vhbb_VjetsBenriched_WJetsBGenFilter_RW!>))
CMS_vhbb_VjetsBenriched_WJetsBGenFilter_RW_2017_13TeV_DOWN: <!.|weightF!>*(1.0+(int(sampleIndex/100)==141||int(sampleIndex/100)==142)*(-1.0 + 1.0/<!.|CMS_vhbb_VjetsBenriched_WJetsBGenFilter_RW!>))
CMS_vhbb_Vjets_WJetsBGenFilter_RW_2017_13TeV_UP: <!.|weightF!>*(<!.|CMS_vhbb_VjetsBenriched_WJetsBGenFilter_RW!>)
CMS_vhbb_Vjets_WJetsBGenFilter_RW_2017_13TeV_DOWN: <!.|weightF!>*(1.0/<!.|CMS_vhbb_VjetsBenriched_WJetsBGenFilter_RW!>)

CMS_vhbb_Vjets_minJetPt_UP: <!.|weightF!>*(<!Stitching|weightMinJetPt_WJ!>)
CMS_vhbb_Vjets_minJetPt_DOWN: <!.|weightF!>*(1.0/(<!Stitching|weightMinJetPt_WJ!>))

TEST_vhbb_BtagMjj_TT_100_110_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>100.0&&H_mass<=110.0)*0.1)
TEST_vhbb_BtagMjj_TT_100_110_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>100.0&&H_mass<=110.0)*0.1)
TEST_vhbb_BtagMjj_TT_110_120_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>110.0&&H_mass<=120.0)*0.1)
TEST_vhbb_BtagMjj_TT_110_120_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>110.0&&H_mass<=120.0)*0.1)
TEST_vhbb_BtagMjj_TT_120_130_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>120.0&&H_mass<=130.0)*0.1)
TEST_vhbb_BtagMjj_TT_120_130_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>120.0&&H_mass<=130.0)*0.1)
TEST_vhbb_BtagMjj_TT_130_140_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>130.0&&H_mass<=140.0)*0.1)
TEST_vhbb_BtagMjj_TT_130_140_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>130.0&&H_mass<=140.0)*0.1)
TEST_vhbb_BtagMjj_TT_140_150_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>140.0&&H_mass<=150.0)*0.1)
TEST_vhbb_BtagMjj_TT_140_150_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.8001&&H_mass>140.0&&H_mass<=150.0)*0.1)

TEST_vhbb_BtagMjj_TM_100_110_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>100.0&&H_mass<=110.0)*0.1)
TEST_vhbb_BtagMjj_TM_100_110_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>100.0&&H_mass<=110.0)*0.1)
TEST_vhbb_BtagMjj_TM_110_120_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>110.0&&H_mass<=120.0)*0.1)
TEST_vhbb_BtagMjj_TM_110_120_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>110.0&&H_mass<=120.0)*0.1)
TEST_vhbb_BtagMjj_TM_120_130_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>120.0&&H_mass<=130.0)*0.1)
TEST_vhbb_BtagMjj_TM_120_130_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>120.0&&H_mass<=130.0)*0.1)
TEST_vhbb_BtagMjj_TM_130_140_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>130.0&&H_mass<=140.0)*0.1)
TEST_vhbb_BtagMjj_TM_130_140_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>130.0&&H_mass<=140.0)*0.1)
TEST_vhbb_BtagMjj_TM_140_150_UP:   <!.|weightF!>*(1.0+(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>140.0&&H_mass<=150.0)*0.1)
TEST_vhbb_BtagMjj_TM_140_150_DOWN: <!.|weightF!>*(1.0-(Jet_btagDeepB[max(hJidx[0],0)]>0.8001&&Jet_btagDeepB[max(hJidx[1],0)]>0.4941&&Jet_btagDeepB[max(hJidx[1],0)]<0.8001&&H_mass>140.0&&H_mass<=150.0)*0.1)

TEST_vhbb_Vjets_njets0_UP:   <!.|weightF!>*(1.0+(Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=max(hJidx[0],0)&&Iteration$!=max(hJidx[1],0))==0)*0.1)
TEST_vhbb_Vjets_njets0_DOWN: <!.|weightF!>*(1.0-(Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=max(hJidx[0],0)&&Iteration$!=max(hJidx[1],0))==0)*0.1)

TEST_vhbb_Vjets_njets1_UP:   <!.|weightF!>*(1.0+(Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=max(hJidx[0],0)&&Iteration$!=max(hJidx[1],0))==1)*0.1)
TEST_vhbb_Vjets_njets1_DOWN: <!.|weightF!>*(1.0-(Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=max(hJidx[0],0)&&Iteration$!=max(hJidx[1],0))==1)*0.1)

TEST_vhbb_Vjets_njets2_UP:   <!.|weightF!>*(1.0+(Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=max(hJidx[0],0)&&Iteration$!=max(hJidx[1],0))==2)*0.1)
TEST_vhbb_Vjets_njets2_DOWN: <!.|weightF!>*(1.0-(Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=max(hJidx[0],0)&&Iteration$!=max(hJidx[1],0))==2)*0.1)

TEST_vhbb_Vjets_mjj_UP:   <!.|weightF!>*(1.0+(TMath::Min(TMath::Max(H_mass,50),250)-150.0)*0.001)
TEST_vhbb_Vjets_mjj_DOWN: <!.|weightF!>*(1.0-(TMath::Min(TMath::Max(H_mass,50),250)-150.0)*0.001)

TEST_vhbb_Vjets_deta_UP:   <!.|weightF!>*(1.0+(TMath::Min(TMath::Max(abs(Jet_eta[max(hJidx[0],0)]-Jet_eta[max(hJidx[1],0)]),0.0),4.0)-1.5)*0.1)
TEST_vhbb_Vjets_deta_DOWN: <!.|weightF!>*(1.0-(TMath::Min(TMath::Max(abs(Jet_eta[max(hJidx[0],0)]-Jet_eta[max(hJidx[1],0)]),0.0),4.0)-1.5)*0.1)

TEST_vhbb_Vjets_dr_UP:   <!.|weightF!>*(1.0+(TMath::Min(TMath::Max(VHbb::deltaR(Jet_eta[max(hJidx[0],0)],Jet_phi[max(hJidx[0],0)],Jet_eta[max(hJidx[1],0)],Jet_phi[max(hJidx[1],0)]),0.0),6.0)-2.0)*0.1)
TEST_vhbb_Vjets_dr_DOWN: <!.|weightF!>*(1.0-(TMath::Min(TMath::Max(VHbb::deltaR(Jet_eta[max(hJidx[0],0)],Jet_phi[max(hJidx[0],0)],Jet_eta[max(hJidx[1],0)],Jet_phi[max(hJidx[1],0)]),0.0),6.0)-2.0)*0.1)

