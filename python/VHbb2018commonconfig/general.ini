[General]

lumi = 58830
#lumi = 38575
#lumi = 77150
#lumi = 40510

VZ_optimize=False 
Debug = True
merge = True
weightexpression = 1
mergeCachingSize = 3

# V11 ntuples
electronMVA80 = Electron_mvaFall17V2Iso_WP80 
electronMVA90 = Electron_mvaFall17V2Iso_WP90
electronMVA   = <!General|electronMVA80!>

MVAtype = DNN
dataset = 2018
nTupleVersion = V12
#JECscheme = Full
JECscheme = Reduced
VjetFlavor = VJ4

# --------------------------------------------------------------------------------------------------
# b-taging
# --------------------------------------------------------------------------------------------------
# CMVA/DeepCSV
#btagMethod = CMVA
btagMethod = DeepCSV
#DeepJet

hJidx_CMVA    = hJidxCMVA
hJidx_DeepCSV = hJidx
hJidx_DeepJet = hJidx
hJidx         = <!General|hJidx_<!General|btagMethod!>!>

btagidx0 = <!General|hJidx!>[0]
btagidx1 = <!General|hJidx!>[1]

btag0    = <!General|Jet_btag!>[<!General|btagidx0!>]
btag1    = <!General|Jet_btag!>[<!General|btagidx1!>]

; CMVA settings
Jet_btag_CMVA = Jet_btagCMVA
btagWP_Loose_CMVA = -0.5884
btagWP_Medium_CMVA = 0.4432
btagWP_Tight_CMVA = 0.9432

; DeepCSV
Jet_btag_DeepCSV = Jet_btagDeepB
btagWP_Loose_DeepCSV = 0.1241
btagWP_Medium_DeepCSV = 0.4184
btagWP_Tight_DeepCSV = 0.7527

; DeepJet
Jet_btag_DeepJet = Jet_btagDeepFlavB
btagWP_Loose_DeepJet = 0.0494 
btagWP_Medium_DeepJet = 0.2770
btagWP_Tight_DeepJet = 0.7264 

; select WP depending on tagger selected in samples_nosplit.ini (The goal is to select from general.ini)
Jet_btag      = <!General|Jet_btag_<!General|btagMethod!>!>
btagWP_Loose  = <!General|btagWP_Loose_<!General|btagMethod!>!>
btagWP_Medium = <!General|btagWP_Medium_<!General|btagMethod!>!>
btagWP_Tight  = <!General|btagWP_Tight_<!General|btagMethod!>!>

;H tag
Hbtag = H

diJetPt = <!General|Hbtag!>_pt
diJetMass = <!General|Hbtag!>_mass
diJetPhi = <!General|Hbtag!>_phi
diJetEta = <!General|Hbtag!>_eta

# default jet definition
Jet_tight = (Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter 
Jet_additional = Iteration$!=<!General|btagidx0!>&&Iteration$!=<!General|btagidx1!>

# apply to signal and V+heavy flavor jets
DeepAK8weightApplies = ((<!Cuts|isBoosted!>)&&(isSignal))
#(sampleIndex==3401||sampleIndex==3402||sampleIndex==3201||sampleIndex==3202||sampleIndex==34601||sampleIndex==34602||sampleIndex==3601||sampleIndex==3602||sampleIndex==3701||sampleIndex==3702))
#&&(isSignal))
#(sampleIndex<0))
#||(sampleIndex>=4000&&sampleIndex<17000&&sampleIndex%%4==0)||(sampleIndex==3401||sampleIndex==3402||sampleIndex==3201||sampleIndex==3202||sampleIndex==34601||sampleIndex==34602)))
#||(sampleIndex==3401||sampleIndex==3402||sampleIndex==3201||sampleIndex==3202||sampleIndex==34601||sampleIndex==34602||sampleIndex==3601||sampleIndex==3602||sampleIndex==3701||sampleIndex==3702))

resolvedBtagWeightApplies = (<!Cuts|isResolved!>)
DeepCSVweightApplies = <!.|resolvedBtagWeightApplies!>

#sanitizeExpression = [['Hbb_fjidx','max(Hbb_fjidx,0)'],['hJidx[0]','max(hJidx[0],0)'],['hJidx[1]','max(hJidx[1],0)']]
sanitizeExpression = [['[Hbb_fjidx]','[max(Hbb_fjidx,0)]'],['[hJidx[0]]','[max(hJidx[0],0)]'],['[hJidx[1]]','[max(hJidx[1],0)]']] 

trackedOptions = [['Configuration','cmsswbase'],['Directories','samplefiles'],['Cuts','OverlapResolvedBoosted'],['General','VjetFlavor'],['Stitching','MethodDY'],['Stitching','MethodWJ'],['Stitching','MethodZJ'],['Stitching','ReweightLHEVpt'],['Weights','weightF(raw)'],['Weights','weightF'],['General','btagMethod'],['General','SFmethod'],['General','JetFlavor(raw)']]

#-------------------------------------------------
# Scale Factors

SFmethod = OFF
#SFmethod = 2017

SF_QCD_OFF   = 1.0
SF_TT_OFF    = 1.0
SF_Wjl_OFF   = 1.0
SF_Wj1b_OFF  = 1.0
SF_Wj2b_OFF  = 1.0
SF_Wjb_OFF  = 1.0
SF_Wjc_OFF  = 1.0
SF_Zjl_OFF   = 1.0
SF_Zj1b_OFF  = 1.0
SF_Zj2b_OFF  = 1.0
SF_Zjb_OFF  = 1.0
SF_Zjc_OFF  = 1.0
SF_VZ_OFF   = 1.0

SF_QCD_2017    = 1.0 
SF_TT_2017     = 0.972 
SF_Wjl_2017    = 1.076
SF_Wj1b_2017   = 1.426
SF_Wj2b_2017   = 0.996
SF_Wjb_2017   = 0.996
SF_Zjl_2017    = 1.006
SF_Zj1b_2017   = 1.743
SF_Zj2b_2017   = 1.367

SF_QCD_Multi   = 1.0
SF_TT_Multi    = 0.966284
SF_Wjl_Multi   = 0.928864
SF_Wj1b_Multi  = 2.51244
SF_Wj2b_Multi  = 0.694641
SF_Zjl_Multi   = 1.01962
SF_Zj1b_Multi  = 0.769048
SF_Zj2b_Multi  = 1.05447


#SF_TT_ANY_OFF_ANY_ANY     = 1.0 
#SF_TT_ANY_OFF_ANY_ANY      = 1.0
#SF_TT_ANY_OFF_ANY_ANY     = 1.0
#SF_TT_ANY_OFF_ANY_ANY      = 1.0
#SF_TT_ANY_OFF_ANY_ANY     = 1.0
#SF_TT_ANY_OFF_ANY_ANY      = 1.0
#
#SF_Zjl_ANY_OFF_ANY_ANY    = 1.0
#SF_Zjl_ANY_OFF_ANY_ANY     = 1.0
#SF_Wjl_ANY_OFF_ANY_ANY    = 1.0
#SF_Wjl_ANY_OFF_ANY_ANY     = 1.0
#SF_Zjl_ANY_OFF_ANY_ANY    = 1.0
#SF_Zjl_ANY_OFF_ANY_ANY     = 1.0
#
#SF_Zj1b_ANY_OFF_ANY   = 1.0
#SF_Zj2b_ANY_OFF_ANY   = 1.0
#SF_Wj1b_ANY_OFF_ANY   = 1.0
#SF_Wj2b_ANY_OFF_ANY   = 1.0
#SF_Zj1b_ANY_OFF_ANY   = 1.0
#SF_Zj2b_ANY_OFF_ANY   = 1.0
#
#SF_Zjc_ANY_OFF_ANY_ANY_True     = 1.0
#SF_Zjc_ANY_OFF_ANY_ANY_True    = 1.0
#SF_Wjc_ANY_OFF_ANY_ANY_True     = 1.0
#SF_Wjc_ANY_OFF_ANY_ANY_True    = 1.0
#SF_Zjc_ANY_OFF_ANY_ANY_True     = 1.0
#SF_Zjc_ANY_OFF_ANY_ANY_True    = 1.0
#
#SF_Zjc_ANY_OFF_ANY_ANY_False     = 1.0
#SF_Zjc_ANY_OFF_ANY_ANY_False    = 1.0
#SF_Wjc_ANY_OFF_ANY_ANY_False     = 1.0
#SF_Wjc_ANY_OFF_ANY_ANY_False    = 1.0
#SF_Zjc_ANY_OFF_ANY_ANY_False     = 1.0
#SF_Zjc_ANY_OFF_ANY_ANY_False    = 1.0
#
#analysis = ANY
#isLF     = ANY
#channel  = ANY
#topology = ANY
#
#SF_B_high_2018_btag_BOOST_VZ       = 0.76 
#SF_TT_high_2018_btag_BOOST_VZ      = 0.91 
#SF_LF_high_2018_btag_BOOST_VZ      = 1.05
#SF_C_failB_high_2018_btag_BOOST_VZ = 0.57
#SF_C_passB_high_2018_btag_BOOST_VZ = 1.05
#
#SF_TT_Znn_2018_VZ = 0.89
#SF_TT_Wln_2018_VZ = 0.91
#SF_TT_Zll_2018_VZ = 0.88
#
#SF_Zjl_Znn_2018_VZ = 1.02
#SF_Wjl_Wln_2018_VZ = 0.78
#SF_Zjl_Zll_2018_VZ = 0.99
#
#SF_Zjb_Znn_2018_VZ = 1.34
#SF_Wjb_Wln_2018_VZ = 1.09
#SF_Zjb_Zll_2018_VZ = 1.22
#
#SF_Zjc_Znn_2018_VZ = 2.03
#SF_Wjc_Wln_2018_VZ = 1.90 
#SF_Zjc_Zll_2018_VZ = 1.51
#
#SF_TT_Znn_2018_VZ_RESOLVED     = (<!General|SF_TT_Znn_2018_<!General|analysis!>!>) 
#SF_TT_Znn_2018_VZ_BOOSTED      = (<!General|SF_TT_Znn_2018_<!General|analysis!>!>*<!General|SF_TT_high_2018_btag_BOOST_<!General|analysis!>!>) 
#SF_TT_Wln_2018_VZ_RESOLVED     = (<!General|SF_TT_Wln_2018_<!General|analysis!>!>) 
#SF_TT_Wln_2018_VZ_BOOSTED      = (<!General|SF_TT_Wln_2018_<!General|analysis!>!>*<!General|SF_TT_high_2018_btag_BOOST_<!General|analysis!>!>) 
#SF_TT_Zll_2018_VZ_RESOLVED     = (<!General|SF_TT_Zll_2018_<!General|analysis!>!>) 
#SF_TT_Zll_2018_VZ_BOOSTED      = (<!General|SF_TT_Zll_2018_<!General|analysis!>!>*<!General|SF_TT_high_2018_btag_BOOST_<!General|analysis!>!>) 
#
#SF_Zjl_Znn_2018_VZ_RESOLVED    = (<!General|SF_Zjl_Znn_2018_<!General|analysis!>!>)
#SF_Zjl_Znn_2018_VZ_BOOSTED     = (<!General|SF_Zjl_Znn_2018_<!General|analysis!>!>*<!General|SF_LF_high_2018_btag_BOOST_<!General|analysis!>!>) 
#SF_Wjl_Wln_2018_VZ_RESOLVED    = (<!General|SF_Wjl_Wln_2018_<!General|analysis!>!>)
#SF_Wjl_Wln_2018_VZ_BOOSTED     = (<!General|SF_Wjl_Wln_2018_<!General|analysis!>!>*<!General|SF_LF_high_2018_btag_BOOST_<!General|analysis!>!>) 
#SF_Zjl_Zll_2018_VZ_RESOLVED    = (<!General|SF_Zjl_Zll_2018_<!General|analysis!>!>)
#SF_Zjl_Zll_2018_VZ_BOOSTED     = (<!General|SF_Zjl_Zll_2018_<!General|analysis!>!>*<!General|SF_LF_high_2018_btag_BOOST_<!General|analysis!>!>) 
#
#SF_Zjb_Znn_2018_VZ_RESOLVED    = (<!General|SF_Zjb_Znn_2018_<!General|analysis!>!>)
#SF_Zjb_Znn_2018_VZ_BOOSTED     = (<!General|SF_Zjb_Znn_2018_<!General|analysis!>!>*<!General|SF_B_high_2018_btag_BOOST_<!General|analysis!>!>) 
#SF_Wjb_Wln_2018_VZ_RESOLVED    = (<!General|SF_Wjb_Wln_2018_<!General|analysis!>!>)
#SF_Wjb_Wln_2018_VZ_BOOSTED     = (<!General|SF_Wjb_Wln_2018_<!General|analysis!>!>*<!General|SF_B_high_2018_btag_BOOST_<!General|analysis!>!>) 
#SF_Zjb_Zll_2018_VZ_RESOLVED    = (<!General|SF_Zjb_Zll_2018_<!General|analysis!>!>)
#SF_Zjb_Zll_2018_VZ_BOOSTED     = (<!General|SF_Zjb_Zll_2018_<!General|analysis!>!>*<!General|SF_B_high_2018_btag_BOOST_<!General|analysis!>!>) 
#
#SF_Zj1b_Znn_2018_VZ   = <!General|SF_Zjb_Znn_2018_VZ_<!General|topology!>!> 
#SF_Zj2b_Znn_2018_VZ   = <!General|SF_Zjb_Znn_2018_VZ_<!General|topology!>!>
#SF_Wj1b_Wln_2018_VZ   = <!General|SF_Wjb_Wln_2018_VZ_<!General|topology!>!> 
#SF_Wj2b_Wln_2018_VZ   = <!General|SF_Wjb_Wln_2018_VZ_<!General|topology!>!>
#SF_Zj1b_Zll_2018_VZ   = <!General|SF_Zjb_Zll_2018_VZ_<!General|topology!>!> 
#SF_Zj2b_Zll_2018_VZ   = <!General|SF_Zjb_Zll_2018_VZ_<!General|topology!>!>
#
#SF_Zjc_Znn_2018_VZ_BOOSTED_True     = (<!General|SF_Zjc_Znn_2018_VZ!>*<!General|SF_C_failB_high_2018_btag_BOOST!>) 
#SF_Zjc_Znn_2018_VZ_RESOLVED_True    = (<!General|SF_Zjc_Znn_2018_VZ!>)
#SF_Wjc_Wln_2018_VZ_BOOSTED_True     = (<!General|SF_Wjc_Wln_2018_VZ!>*<!General|SF_C_failB_high_2018_btag_BOOST!>)
#SF_Wjc_Wln_2018_VZ_RESOLVED_True    = (<!General|SF_Wjc_Wln_2018_VZ!>) 
#SF_Zjc_Zll_2018_VZ_BOOSTED_True     = (<!General|SF_Zjc_Zll_2018_VZ!>*<!General|SF_C_failB_high_2018_btag_BOOST!>)
#SF_Zjc_Zll_2018_VZ_RESOLVED_True    = (<!General|SF_Zjc_Zll_2018_VZ!>) 
#
#SF_Zjc_Znn_2018_VZ_BOOSTED_False     = (<!General|SF_Zjc_Znn_2018_VZ!>*<!General|SF_C_passB_high_2018_btag_BOOST!>) 
#SF_Zjc_Znn_2018_VZ_RESOLVED_False    = (<!General|SF_Zjc_Znn_2018_VZ!>)
#SF_Wjc_Wln_2018_VZ_BOOSTED_False     = (<!General|SF_Wjc_Wln_2018_VZ!>*<!General|SF_C_passB_high_2018_btag_BOOST!>)
#SF_Wjc_Wln_2018_VZ_RESOLVED_False    = (<!General|SF_Wjc_Wln_2018_VZ!>) 
#SF_Zjc_Zll_2018_VZ_BOOSTED_False     = (<!General|SF_Zjc_Zll_2018_VZ!>*<!General|SF_C_passB_high_2018_btag_BOOST!>)
#SF_Zjc_Zll_2018_VZ_RESOLVED_False    = (<!General|SF_Zjc_Zll_2018_VZ!>) 
#
#SF_QCD   = 1.0
#SF_TT    = <!General|SF_TT_<!General|channel!>_<!General|SFmethod!>_<!General|analysis!>_<!General|topology!>!>
#SF_Wjl   = <!General|SF_Wjl_Wln_<!General|SFmethod!>_<!General|analysis!>_<!General|topology!>!>
#SF_Wj1b  = <!General|SF_Wj1b_Wln_<!General|SFmethod!>_<!General|analysis!>!>
#SF_Wj2b  = <!General|SF_Wj2b_Wln_<!General|SFmethod!>_<!General|analysis!>!>
#SF_Wjc   = <!General|SF_Wjc_Wln_<!General|SFmethod!>_<!General|analysis!>_<!General|topology!>_<!General|isLF!>!> 
#SF_Zjl   = <!General|SF_Zjl_<!General|channel!>_<!General|SFmethod!>_<!General|analysis!>_<!General|topology!>!>
#SF_Zj1b  = <!General|SF_Zj1b_<!General|channel!>_<!General|SFmethod!>_<!General|analysis!>!>
#SF_Zj2b  = <!General|SF_Zj2b_<!General|channel!>_<!General|SFmethod!>_<!General|analysis!>!>
#SF_Zjc   = <!General|SF_Zjc_<!General|channel!>_<!General|SFmethod!>_<!General|analysis!>_<!General|topology!>_<!General|isLF!>!> 
#
SF_QCD   = <!General|SF_QCD_<!General|SFmethod!>!>
SF_TT    = <!General|SF_TT_<!General|SFmethod!>!>
SF_Wjl   = <!General|SF_Wjl_<!General|SFmethod!>!>
SF_Wj1b  = <!General|SF_Wj1b_<!General|SFmethod!>!>
SF_Wj2b  = <!General|SF_Wj2b_<!General|SFmethod!>!>
SF_Zjl   = <!General|SF_Zjl_<!General|SFmethod!>!>
SF_Zj1b  = <!General|SF_Zj1b_<!General|SFmethod!>!>
SF_Zj2b  = <!General|SF_Zj2b_<!General|SFmethod!>!>
SF_Wjc   = <!General|SF_Wjc_<!General|SFmethod!>!>
SF_Zjc   = <!General|SF_Zjc_<!General|SFmethod!>!>
SF_WJets_VJ3 = [<!General|SF_Wjl!>, <!General|SF_Wjc!>, <!General|SF_Wjb!>]
SF_ZJets_VJ3 = [<!General|SF_Zjl!>, <!General|SF_Zjc!>, <!General|SF_Zjb!>]
#SF_VZ    = [1.0,1.0,1.0]

SF_WJets_VJ4 = [<!General|SF_Wjl!>, <!General|SF_Wjc!>, <!General|SF_Wj1b!>, <!General|SF_Wj2b!>]
SF_ZJets_VJ4 = [<!General|SF_Zjl!>, <!General|SF_Zjc!>, <!General|SF_Zj1b!>, <!General|SF_Zj2b!>]

SF_WJets_Default = [<!General|SF_Wjl!>, <!General|SF_Wj1b!>, <!General|SF_Wj2b!>]
SF_ZJets_Default = [<!General|SF_Zjl!>, <!General|SF_Zj1b!>, <!General|SF_Zj2b!>]

SF_WJets = <!.|SF_WJets_<!General|VjetFlavor!>!>
SF_ZJets = <!.|SF_ZJets_<!General|VjetFlavor!>!>

[SLURM]
options = --account=t3

[Configuration]
usePythonXrootD      = True
outputTreeBasketSize = 8000
haddTargetNumEvents  = 16000
TreeCopierPSI        = True
files_per_job        = 50
nprocesses           = 0
run_locally          = False
nTupleVersion        = V13

# NanoAOD format
treeName            = Events
countTreeName       = genEventSumw_
#countTreeName       = genWtHist
AllowDuplicateTrees = True
countsFromAutoPU    = False

# datasets
datasets = <!Configuration|cmsswbase!>/src/Xbb/samples/VHbbPostNano2017_V2.txt
dasQuery = dasgoclient -query="file dataset={dataset} instance=prod/phys03"

[VHbbNameSpace]
library=<!Directories|vhbbpath!>/interface/VHbbNameSpace_h.so

[Analysis]
tag = 13TeV

# flags below are NOT USED ANYMORE!!
# TODO: remove

# BDT to discriminate Signal and Background
#!! If this Flag is used then 50% of MC samples will go in training and the rest will be scaled up by a factor of 2.
#!! if you train on 50% but then set it to 'False' while writing DC, then you get your biased training samples in the limit!!!
#!! be sure to have this right !!!
;#When computing SF from CR, set this flag to false
;if one wants to use Mjj -> put to False
;Rescale MC by factor 2 if true
TrainFlag = True
;TrainFlag = False
;Current BDT FOM: Cls of train/vs CLs of test sample. To produce the DC on train sample, set this flag to True.
;!!!IMPORTANT: BE SURE TO HAVE "UseTrainSample = False" WHEN COMPUTING THE FINAL LIMIT !!!
UseTrainSample = False
;UseTrainSample = True
;ALWAYS set to False, unless training to produce correlation plots
Data_as_signal = False

[systematics]
JEC_Full    = ['jer','jerReg','jesAbsoluteStat','jesAbsoluteScale','jesAbsoluteFlavMap','jesAbsoluteMPFBias','jesFragmentation','jesSinglePionECAL','jesSinglePionHCAL','jesFlavorQCD','jesRelativeJEREC1','jesRelativeJEREC2','jesRelativeJERHF','jesRelativePtBB','jesRelativePtEC1','jesRelativePtEC2','jesRelativePtHF','jesRelativeBal','jesRelativeFSR','jesRelativeStatFSR','jesRelativeStatEC','jesRelativeStatHF','jesPileUpDataMC','jesPileUpPtRef','jesPileUpPtBB','jesPileUpPtEC1','jesPileUpPtEC2','jesPileUpPtHF','jesPileUpMuZero','jesPileUpEnvelope','jesTotal']
JEC_Reduced = ['jer','jerReg','jerRegScale','jerRegSmear','jesAbsolute','jesAbsolute_2018','jesBBEC1','jesBBEC1_2018','jesEC2','jesEC2_2018','jesFlavorQCD','jesHF','jesHF_2018','jesRelativeBal','jesRelativeSample_2018']

JEC = <!.|JEC_<!General|JECscheme!>!>

JEC_Preselection = <!.|JEC!>
JEC_METXY        = <!.|JEC!>
JEC_VReco        = <!.|JEC!>

systematics_Full    = Nominal jer_Up jer_Down jerReg_Up jerReg_Down jesAbsoluteStat_Up jesAbsoluteStat_Down jesAbsoluteScale_Up jesAbsoluteScale_Down jesAbsoluteFlavMap_Up jesAbsoluteFlavMap_Down jesAbsoluteMPFBias_Up jesAbsoluteMPFBias_Down jesFragmentation_Up jesFragmentation_Down jesSinglePionECAL_Up jesSinglePionECAL_Down jesSinglePionHCAL_Up jesSinglePionHCAL_Down jesFlavorQCD_Up jesFlavorQCD_Down jesRelativeJEREC1_Up jesRelativeJEREC1_Down jesRelativeJEREC2_Up jesRelativeJEREC2_Down jesRelativeJERHF_Up jesRelativeJERHF_Down jesRelativePtBB_Up jesRelativePtBB_Down jesRelativePtEC1_Up jesRelativePtEC1_Down jesRelativePtEC2_Up jesRelativePtEC2_Down jesRelativePtHF_Up jesRelativePtHF_Down jesRelativeBal_Up jesRelativeBal_Down jesRelativeFSR_Up jesRelativeFSR_Down jesRelativeStatFSR_Up jesRelativeStatFSR_Down jesRelativeStatEC_Up jesRelativeStatEC_Down jesRelativeStatHF_Up jesRelativeStatHF_Down jesPileUpDataMC_Up jesPileUpDataMC_Down jesPileUpPtRef_Up jesPileUpPtRef_Down jesPileUpPtBB_Up jesPileUpPtBB_Down jesPileUpPtEC1_Up jesPileUpPtEC1_Down jesPileUpPtEC2_Up jesPileUpPtEC2_Down jesPileUpPtHF_Up jesPileUpPtHF_Down jesPileUpMuZero_Up jesPileUpMuZero_Down jesPileUpEnvelope_Up jesPileUpEnvelope_Down jesTotal_Up jesTotal_Down unclustEn_Up unclustEn_Down
systematics_Reduced = Nominal jer_Up jer_Down jerReg_Up jerReg_Down jerRegScale_Up jerRegScale_Down jerRegSmear_Up jerRegSmear_Down jesAbsolute_Up jesAbsolute_Down jesAbsolute_2018_Up jesAbsolute_2018_Down jesBBEC1_Up jesBBEC1_Down jesBBEC1_2018_Up jesBBEC1_2018_Down jesEC2_Up jesEC2_Down jesEC2_2018_Up jesEC2_2018_Down jesFlavorQCD_Up jesFlavorQCD_Down jesHF_Up jesHF_Down jesHF_2018_Up jesHF_2018_Down jesRelativeBal_Up jesRelativeBal_Down jesRelativeSample_2018_Up jesRelativeSample_2018_Down unclustEn_Up unclustEn_Down

systematics_BOOST_Full    = Nominal jer_Up jer_Down jerReg_Up jerReg_Down jesAbsoluteStat_Up jesAbsoluteStat_Down jesAbsoluteScale_Up jesAbsoluteScale_Down jesAbsoluteFlavMap_Up jesAbsoluteFlavMap_Down jesAbsoluteMPFBias_Up jesAbsoluteMPFBias_Down jesFragmentation_Up jesFragmentation_Down jesSinglePionECAL_Up jesSinglePionECAL_Down jesSinglePionHCAL_Up jesSinglePionHCAL_Down jesFlavorQCD_Up jesFlavorQCD_Down jesRelativeJEREC1_Up jesRelativeJEREC1_Down jesRelativeJEREC2_Up jesRelativeJEREC2_Down jesRelativeJERHF_Up jesRelativeJERHF_Down jesRelativePtBB_Up jesRelativePtBB_Down jesRelativePtEC1_Up jesRelativePtEC1_Down jesRelativePtEC2_Up jesRelativePtEC2_Down jesRelativePtHF_Up jesRelativePtHF_Down jesRelativeBal_Up jesRelativeBal_Down jesRelativeFSR_Up jesRelativeFSR_Down jesRelativeStatFSR_Up jesRelativeStatFSR_Down jesRelativeStatEC_Up jesRelativeStatEC_Down jesRelativeStatHF_Up jesRelativeStatHF_Down jesPileUpDataMC_Up jesPileUpDataMC_Down jesPileUpPtRef_Up jesPileUpPtRef_Down jesPileUpPtBB_Up jesPileUpPtBB_Down jesPileUpPtEC1_Up jesPileUpPtEC1_Down jesPileUpPtEC2_Up jesPileUpPtEC2_Down jesPileUpPtHF_Up jesPileUpPtHF_Down jesPileUpMuZero_Up jesPileUpMuZero_Down jesPileUpEnvelope_Up jesPileUpEnvelope_Down jesTotal_Up jesTotal_Down unclustEn_Up unclustEn_Down jms_Up jms_Down jmr_Up jmr_Down
systematics_BOOST_Reduced = Nominal jer_Up jer_Down jerReg_Up jerReg_Down jerRegScale_Up jerRegScale_Down jerRegSmear_Up jerRegSmear_Down jesAbsolute_Up jesAbsolute_Down jesAbsolute_2018_Up jesAbsolute_2018_Down jesBBEC1_Up jesBBEC1_Down jesBBEC1_2018_Up jesBBEC1_2018_Down jesEC2_Up jesEC2_Down jesEC2_2018_Up jesEC2_2018_Down jesFlavorQCD_Up jesFlavorQCD_Down jesHF_Up jesHF_Down jesHF_2018_Up jesHF_2018_Down jesRelativeBal_Up jesRelativeBal_Down jesRelativeSample_2018_Up jesRelativeSample_2018_Down unclustEn_Up unclustEn_Down jms_Up jms_Down jmr_Up jmr_Down


systematics       = <!.|systematics_<!General|JECscheme!>!>
systematics_BOOST = <!.|systematics_BOOST_<!General|JECscheme!>!>

[LimitGeneral]

;use looser cuts for caching and then cut tight when producing the datacard. Speed up if minmax branches are present
useMinmaxCuts = False

;_*_*_*_*_*_*_*_*_*_*_*_*_*_*_*_*_*
;Common
;_*_*_*_*_*_*_*_*_*_*_*_*_*_*_*_*_*

;!! configuration of systematics effects and behaviour
sys_factor = {
    'jesTotal':1.0,
    'jer':1.0,
    'jerReg':1.0,
    'jesAbsoluteStat':1.0,
    'jesAbsoluteScale':1.0,
    'jesAbsoluteFlavMap':1.0,
    'jesAbsoluteMPFBias':1.0,
    'jesFragmentation':1.0,
    'jesSinglePionECAL':1.0,
    'jesSinglePionHCAL':1.0,
    'jesFlavorQCD':1.0,
    'jesRelativeJEREC1':1.0,
    'jesRelativeJEREC2':1.0,
    'jesRelativeJERHF':1.0,
    'jesRelativePtBB':1.0,
    'jesRelativePtEC1':1.0,
    'jesRelativePtEC2':1.0,
    'jesRelativePtHF':1.0,
    'jesRelativeBal':1.0,
    'jesRelativeFSR':1.0,
    'jesRelativeStatFSR':1.0,
    'jesRelativeStatEC':1.0,
    'jesRelativeStatHF':1.0,
    'jesPileUpDataMC':1.0,
    'jesPileUpPtRef':1.0,
    'jesPileUpPtBB':1.0,
    'jesPileUpPtEC1':1.0,
    'jesPileUpPtEC2':1.0,
    'jesPileUpPtHF':1.0,
    'jesPileUpMuZero':1.0,
    'jesPileUpEnvelope':1.0,
    }
;now

affecting_all = ['ZH', 'WH', 'ggZH', 'VVHF', 'VVLF', 'ZJets_0b', 'ZJets_1b', 'ZJets_2b', 'WJets_0b', 'WJets_1b', 'WJets_2b', 'TT', 'ST', 'QCD']
sys_affecting = {'jer':<!LimitGeneral|affecting_all!>,'jerReg':<!LimitGeneral|affecting_all!>,'jesAbsoluteStat':<!LimitGeneral|affecting_all!>,'jesAbsoluteScale':<!LimitGeneral|affecting_all!>,'jesAbsoluteFlavMap':<!LimitGeneral|affecting_all!>,'jesAbsoluteMPFBias':<!LimitGeneral|affecting_all!>,'jesFragmentation':<!LimitGeneral|affecting_all!>,'jesSinglePionECAL':<!LimitGeneral|affecting_all!>,'jesSinglePionHCAL':<!LimitGeneral|affecting_all!>,'jesFlavorQCD':<!LimitGeneral|affecting_all!>,'jesRelativeJEREC1':<!LimitGeneral|affecting_all!>,'jesRelativeJEREC2':<!LimitGeneral|affecting_all!>,'jesRelativeJERHF':<!LimitGeneral|affecting_all!>,'jesRelativePtBB':<!LimitGeneral|affecting_all!>,'jesRelativePtEC1':<!LimitGeneral|affecting_all!>,'jesRelativePtEC2':<!LimitGeneral|affecting_all!>,'jesRelativePtHF':<!LimitGeneral|affecting_all!>,'jesRelativeBal':<!LimitGeneral|affecting_all!>,'jesRelativeFSR':<!LimitGeneral|affecting_all!>,'jesRelativeStatFSR':<!LimitGeneral|affecting_all!>,'jesRelativeStatEC':<!LimitGeneral|affecting_all!>,'jesRelativeStatHF':<!LimitGeneral|affecting_all!>,'jesPileUpDataMC':<!LimitGeneral|affecting_all!>,'jesPileUpPtRef':<!LimitGeneral|affecting_all!>,'jesPileUpPtBB':<!LimitGeneral|affecting_all!>,'jesPileUpPtEC1':<!LimitGeneral|affecting_all!>,'jesPileUpPtEC2':<!LimitGeneral|affecting_all!>,'jesPileUpPtHF':<!LimitGeneral|affecting_all!>,'jesPileUpMuZero':<!LimitGeneral|affecting_all!>,'jesPileUpEnvelope':<!LimitGeneral|affecting_all!>}

# these lists are used to replace variables in the cuts to make the datacards 

replace_cut_base_kinfit = [
        'kinFit_n_recoil_jets_fit>kinFit_n_recoil_jets_fit_{syst}_{UD}',
        'kinFit_H_mass_sigma_fit>kinFit_H_mass_sigma_fit_{syst}_{UD}',
        'kinFit_H_mass_fit>kinFit_H_mass_fit_{syst}_{UD}',
        'kinFit_H_pt_fit>kinFit_H_pt_fit_{syst}_{UD}',
        'kinFit_H_eta_fit>kinFit_H_eta_fit_{syst}_{UD}',
        'kinFit_H_phi_fit>kinFit_H_phi_fit_{syst}_{UD}',
        'kinFit_V_mass_fit>kinFit_V_mass_fit_{syst}_{UD}',
        'kinFit_V_pt_fit>kinFit_V_pt_fit_{syst}_{UD}',
        'kinFit_V_eta_fit>kinFit_V_eta_fit_{syst}_{UD}',
        'kinFit_V_phi_fit>kinFit_V_phi_fit_{syst}_{UD}',
        'kinFit_jjVPtRatio_fit>kinFit_jjVPtRatio_fit_{syst}_{UD}',
        'kinFit_hJets_pt_0_fit>kinFit_hJets_pt_0_fit_{syst}_{UD}',
        'kinFit_hJets_pt_1_fit>kinFit_hJets_pt_1_fit_{syst}_{UD}',
        'kinFit_HVdPhi_fit>kinFit_HVdPhi_fit_{syst}_{UD}',
        ]

replace_cut_base_Higgs = [
        'dPhiVH>dPhiVH_{syst}_{UD}',
        'H_mass_noFSR>H_mass_noFSR_{syst}_{UD}', 
        'H_pt_noFSR>H_pt_noFSR_{syst}_{UD}', 
        'H_mass>H_mass_{syst}_{UD}', 
        'H_phi>H_phi_{syst}_{UD}', 
        'H_pt>H_pt_{syst}_{UD}', 
        'H_eta>H_eta_{syst}_{UD}',
        'isBoosted_VZ>isBoosted_VZ_{syst}_{UD}',
        'isBoosted>isBoosted_{syst}_{UD}',
        'resolvedCR_VZ>resolvedCR_VZ_{syst}_{UD}',
        'resolvedSR_VZ>resolvedSR_VZ_{syst}_{UD}',
        'boostedCR_VZ>boostedCR_VZ_{syst}_{UD}',
        'boostedSR_VZ>boostedSR_VZ_{syst}_{UD}',
        'resolvedCR>resolvedCR_{syst}_{UD}',
        'resolvedSR>resolvedSR_{syst}_{UD}',
        'boostedCR>boostedCR_{syst}_{UD}',
        'boostedSR>boostedSR_{syst}_{UD}',
        'hJidx>hJidx_{syst}{UD}',
        ]

replace_cut_base_jets = [
        'Jet_PtReg[hJidx[0]]>Jet_PtReg[hJidx[0]]*Jet_pt_{syst}{UD}[hJidx[0]]/Jet_Pt[hJidx[0]]',
        'Jet_PtReg[hJidx[1]]>Jet_PtReg[hJidx[1]]*Jet_pt_{syst}{UD}[hJidx[1]]/Jet_Pt[hJidx[1]]',
        'Jet_PtReg[hJidxCMVA[0]]>Jet_PtReg[hJidxCMVA[0]]*Jet_pt_{syst}{UD}[hJidxCMVA[0]]/Jet_Pt[hJidxCMVA[0]]',
        'Jet_PtReg[hJidxCMVA[1]]>Jet_PtReg[hJidxCMVA[1]]*Jet_pt_{syst}{UD}[hJidxCMVA[1]]/Jet_Pt[hJidxCMVA[1]]',
        'Jet_PtReg>Jet_PtReg*Jet_pt_{syst}{UD}/Jet_Pt',
        'Jet_Pt[hJidx[0]]>Jet_pt_{syst}{UD}[hJidx[0]]',
        'Jet_Pt[hJidx[1]]>Jet_pt_{syst}{UD}[hJidx[1]]',
        'Jet_Pt[hJidxCMVA[0]]>Jet_pt_{syst}{UD}[hJidxCMVA[0]]',
        'Jet_Pt[hJidxCMVA[1]]>Jet_pt_{syst}{UD}[hJidxCMVA[1]]',
        'Jet_Pt>Jet_pt_{syst}{UD}',
        'hJets_0_pt_FSRrecovered>hJets_0_pt_FSRrecovered_{syst}_{UD}',
        'hJets_1_pt_FSRrecovered>hJets_1_pt_FSRrecovered_{syst}_{UD}',
        'hJets_FSRrecovered_dEta>hJets_FSRrecovered_dEta_{syst}_{UD}',
        'hJets_FSRrecovered_dPhi>hJets_FSRrecovered_dPhi_{syst}_{UD}',
        ]

replace_cut_jerReg_jets = [
        'Jet_PtReg>Jet_PtReg{UD}',
        'hJets_0_pt_FSRrecovered>hJets_0_pt_FSRrecovered_{syst}_{UD}',
        'hJets_1_pt_FSRrecovered>hJets_1_pt_FSRrecovered_{syst}_{UD}',
        'hJets_FSRrecovered_dEta>hJets_FSRrecovered_dEta_{syst}_{UD}',
        'hJets_FSRrecovered_dPhi>hJets_FSRrecovered_dPhi_{syst}_{UD}',
        ]
replace_cut_jerRegScale_jets = [
        'Jet_PtReg>Jet_PtRegScale{UD}',
        'hJets_0_pt_FSRrecovered>hJets_0_pt_FSRrecovered_{syst}_{UD}',
        'hJets_1_pt_FSRrecovered>hJets_1_pt_FSRrecovered_{syst}_{UD}',
        'hJets_FSRrecovered_dEta>hJets_FSRrecovered_dEta_{syst}_{UD}',
        'hJets_FSRrecovered_dPhi>hJets_FSRrecovered_dPhi_{syst}_{UD}',
        ]
replace_cut_jerRegSmear_jets = [
        'Jet_PtReg>Jet_PtRegSmear{UD}',
        'hJets_0_pt_FSRrecovered>hJets_0_pt_FSRrecovered_{syst}_{UD}',
        'hJets_1_pt_FSRrecovered>hJets_1_pt_FSRrecovered_{syst}_{UD}',
        'hJets_FSRrecovered_dEta>hJets_FSRrecovered_dEta_{syst}_{UD}',
        'hJets_FSRrecovered_dPhi>hJets_FSRrecovered_dPhi_{syst}_{UD}',
        ]

replace_cut_base_met = [
        'MET_Phi>MET_phi_{syst}{UD}',
        'MET_Pt>MET_pt_{syst}{UD}',
        'MET_sig30puid>MET_sig30puid_{syst}_{UD}',
        ]

replace_cut_base_vector = [
        'V_pt>V_pt_{syst}_{UD}',
        'V_eta>V_eta_{syst}_{UD}',
        'V_phi>V_phi_{syst}_{UD}',
        'V_mt>V_mt_{syst}_{UD}',
        ]

replace_cut_base_top = [
        'top_mass2_05>top_mass2_05_{syst}_{UD}',
        ]

# BOOSTED
replace_cut_boosted_msd_1 = [
        'FatJet_msoftdrop_nom[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]',
        'FatJet_Msoftdrop[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]',
        ]
replace_cut_boosted_msd_2 = [
        'FatJet_msoftdrop_nom[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]*FatJet_msoftdrop_nom[Hbb_fjidx]',
        'FatJet_Msoftdrop[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]*FatJet_Msoftdrop[Hbb_fjidx]',
        ]
replace_cut_boosted_jets = [
        'FatJet_pt_nom[Hbb_fjidx]>FatJet_pt_{syst}{UD}[Hbb_fjidx]',
        'FatJet_Pt[Hbb_fjidx]>FatJet_pt_{syst}{UD}[Hbb_fjidx]',
        ]

# this is the default convention for sys variations
replace_cut_resolved = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_base_jets!>+<!.|replace_cut_base_met!>+<!.|replace_cut_base_top!>+<!.|replace_cut_base_vector!>
replace_cut = <!.|replace_cut_boosted_msd_1!>+<!.|replace_cut_boosted_jets!>+<!.|replace_cut_resolved!>+<!.|replace_cut_base_vector!>

# energy regression sys variation is implemented differently for jets, not affecting MET and BOOSTED
replace_cut_jerReg = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_jerReg_jets!>+<!.|replace_cut_base_top!>
replace_cut_jerRegScale = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_jerRegScale_jets!>+<!.|replace_cut_base_top!>
replace_cut_jerRegSmear = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_jerRegSmear_jets!>+<!.|replace_cut_base_top!>

# different convention for BOOSTED only, standard one in resolved
replace_cut_jer = <!.|replace_cut_boosted_msd_1!>+<!.|replace_cut_boosted_jets!>+<!.|replace_cut_resolved!>

# JMS/JMR only apply to M_sd
replace_cut_jms = <!.|replace_cut_boosted_msd_1!>
replace_cut_jmr = <!.|replace_cut_boosted_msd_1!>

replace_cut_unclustEn = [
        'MET_Pt>MET_pt_unclustEn{UD}',
        'MET_Phi>MET_phi_unclustEn{UD}',
        'V_pt>V_pt_unclustEn_{UD}',
        'V_eta>V_eta_unclustEn_{UD}',
        'V_phi>V_phi_unclustEn_{UD}',
        'V_mt>V_mt_unclustEn_{UD}',
        'MET_sig30puid>MET_sig30puid_{syst}_{UD}',
        ]
#replace_cut_base_kinfit = [
#        'kinFit_n_recoil_jets_fit>kinFit_n_recoil_jets_fit_{syst}_{UD}',
#        'kinFit_H_mass_sigma_fit>kinFit_H_mass_sigma_fit_{syst}_{UD}',
#        'kinFit_H_mass_fit>kinFit_H_mass_fit_{syst}_{UD}',
#        'kinFit_H_pt_fit>kinFit_H_pt_fit_{syst}_{UD}',
#        'kinFit_H_eta_fit>kinFit_H_eta_fit_{syst}_{UD}',
#        'kinFit_H_phi_fit>kinFit_H_phi_fit_{syst}_{UD}',
#        'kinFit_V_mass_fit>kinFit_V_mass_fit_{syst}_{UD}',
#        'kinFit_V_pt_fit>kinFit_V_pt_fit_{syst}_{UD}',
#        'kinFit_V_eta_fit>kinFit_V_eta_fit_{syst}_{UD}',
#        'kinFit_V_phi_fit>kinFit_V_phi_fit_{syst}_{UD}',
#        'kinFit_jjVPtRatio_fit>kinFit_jjVPtRatio_fit_{syst}_{UD}',
#        'kinFit_hJets_pt_0_fit>kinFit_hJets_pt_0_fit_{syst}_{UD}',
#        'kinFit_hJets_pt_1_fit>kinFit_hJets_pt_1_fit_{syst}_{UD}',
#        'kinFit_HVdPhi_fit>kinFit_HVdPhi_fit_{syst}_{UD}',
#        ]
#
#replace_cut_base_Higgs = [
#        'H_mass_noFSR>H_mass_noFSR_{syst}_{UD}', 
#        'H_pt_noFSR>H_pt_noFSR_{syst}_{UD}', 
#        'H_mass>H_mass_{syst}_{UD}', 
#        'H_phi>H_phi_{syst}_{UD}', 
#        'H_pt>H_pt_{syst}_{UD}', 
#        'H_eta>H_eta_{syst}_{UD}',
#        'isBoosted>isBoosted_{syst}_{UD}',
#        'resolvedCR_VZ>resolvedCR_VZ_{syst}_{UD}',
#        'resolvedSR_VZ>resolvedSR_VZ_{syst}_{UD}',
#        'boostedCR_VZ>boostedCR_VZ_{syst}_{UD}',
#        'boostedSR_VZ>boostedSR_VZ_{syst}_{UD}',
#        'resolvedCR>resolvedCR_{syst}_{UD}',
#        'resolvedSR>resolvedSR_{syst}_{UD}',
#        'boostedCR>boostedCR_{syst}_{UD}',
#        'boostedSR>boostedSR_{syst}_{UD}',
#        ]
#
#replace_cut_base_jets = [
#        'Jet_PtReg[hJidx[0]]>Jet_PtReg[hJidx[0]]*Jet_pt_{syst}{UD}[hJidx[0]]/Jet_Pt[hJidx[0]]',
#        'Jet_PtReg[hJidx[1]]>Jet_PtReg[hJidx[1]]*Jet_pt_{syst}{UD}[hJidx[1]]/Jet_Pt[hJidx[1]]',
#        'Jet_PtReg[hJidxCMVA[0]]>Jet_PtReg[hJidxCMVA[0]]*Jet_pt_{syst}{UD}[hJidxCMVA[0]]/Jet_Pt[hJidxCMVA[0]]',
#        'Jet_PtReg[hJidxCMVA[1]]>Jet_PtReg[hJidxCMVA[1]]*Jet_pt_{syst}{UD}[hJidxCMVA[1]]/Jet_Pt[hJidxCMVA[1]]',
#        'Jet_PtReg>Jet_PtReg*Jet_pt_{syst}{UD}/Jet_Pt',
#        'Jet_Pt[hJidx[0]]>Jet_pt_{syst}{UD}[hJidx[0]]',
#        'Jet_Pt[hJidx[1]]>Jet_pt_{syst}{UD}[hJidx[1]]',
#        'Jet_Pt[hJidxCMVA[0]]>Jet_pt_{syst}{UD}[hJidxCMVA[0]]',
#        'Jet_Pt[hJidxCMVA[1]]>Jet_pt_{syst}{UD}[hJidxCMVA[1]]',
#        'Jet_Pt>Jet_pt_{syst}{UD}',
#        ]
#
#replace_cut_jerReg_jets = [
#        'Jet_PtReg>Jet_PtReg{UD}',
#        ]
#
#replace_cut_base_met = [
#        'MET_Phi>MET_phi_{syst}{UD}',
#        'MET_Pt>MET_pt_{syst}{UD}',
#        'MET_sig30puid>MET_sig30puid_{syst}_{UD}',
#        ]
#
#replace_cut_base_vector = [
#        'V_pt>V_pt_{syst}_{UD}',
#        'V_eta>V_eta_{syst}_{UD}',
#        'V_phi>V_phi_{syst}_{UD}',
#        'V_mt>V_mt_{syst}_{UD}',
#        ]
#
#replace_cut_base_top = [
#        'top_mass2_05>top_mass2_05_{syst}_{UD}',
#        ]
#
## BOOSTED
#replace_cut_boosted_msd_1 = [
#        'FatJet_msoftdrop_nom[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]',
#        'FatJet_Msoftdrop[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]',
#        ]
#replace_cut_boosted_msd_2 = [
#        'FatJet_msoftdrop_nom[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]*FatJet_msoftdrop_nom[Hbb_fjidx]',
#        'FatJet_Msoftdrop[Hbb_fjidx]>FatJet_msoftdrop_{syst}{UD}[Hbb_fjidx]*FatJet_Msoftdrop[Hbb_fjidx]',
#        ]
#replace_cut_boosted_jets = [
#        'FatJet_pt_nom[Hbb_fjidx]>FatJet_pt_{syst}{UD}[Hbb_fjidx]',
#        'FatJet_Pt[Hbb_fjidx]>FatJet_pt_{syst}{UD}[Hbb_fjidx]',
#        ]
#
## this is the default convention for sys variations
#replace_cut_resolved = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_base_jets!>+<!.|replace_cut_base_met!>+<!.|replace_cut_base_top!>+<!.|replace_cut_base_vector!>
#replace_cut = <!.|replace_cut_boosted_msd_1!>+<!.|replace_cut_boosted_jets!>+<!.|replace_cut_resolved!>+<!.|replace_cut_base_vector!>
#
## energy regression sys variation is implemented differently for jets, not affecting MET and BOOSTED
#replace_cut_jerReg = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_jerReg_jets!>+<!.|replace_cut_base_top!>
#replace_cut_jerRegScale = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_jerRegScale_jets!>+<!.|replace_cut_base_top!>
#replace_cut_jerRegSmear = <!.|replace_cut_base_kinfit!>+<!.|replace_cut_base_Higgs!>+<!.|replace_cut_jerRegSmear_jets!>+<!.|replace_cut_base_top!>
#
## different convention for BOOSTED only, standard one in resolved
#replace_cut_jer = <!.|replace_cut_boosted_msd_1!>+<!.|replace_cut_boosted_jets!>+<!.|replace_cut_resolved!>
#
## JMS/JMR only apply to M_sd
#replace_cut_jms = <!.|replace_cut_boosted_msd_1!>
#replace_cut_jmr = <!.|replace_cut_boosted_msd_1!>
#
#replace_cut_unclustEn = [
#        'MET_Pt>MET_pt_unclustEn{UD}',
#        'MET_Phi>MET_phi_unclustEn{UD}',
#        'V_pt>V_pt_unclustEn_{UD}',
#        'V_eta>V_eta_unclustEn_{UD}',
#        'V_phi>V_phi_unclustEn_{UD}',
#        'V_mt>V_mt_unclustEn_{UD}',
#        'MET_sig30puid>MET_sig30puid_{syst}_{UD}',
#        ]
#
sys_cut_suffix = {'default':<!LimitGeneral|replace_cut!>,'jesTotal':<!LimitGeneral|replace_cut!>,'jer':<!LimitGeneral|replace_cut_jer!>,'jerReg':<!LimitGeneral|replace_cut_jerReg!>,'jerRegScale':<!LimitGeneral|replace_cut_jerRegScale!>,'jerRegSmear':<!LimitGeneral|replace_cut_jerRegSmear!>,'jesAbsoluteStat':<!LimitGeneral|replace_cut!>,'jesAbsoluteScale':<!LimitGeneral|replace_cut!>,'jesAbsoluteFlavMap':<!LimitGeneral|replace_cut!>,'jesAbsoluteMPFBias':<!LimitGeneral|replace_cut!>,'jesFragmentation':<!LimitGeneral|replace_cut!>,'jesSinglePionECAL':<!LimitGeneral|replace_cut!>,'jesSinglePionHCAL':<!LimitGeneral|replace_cut!>,'jesFlavorQCD':<!LimitGeneral|replace_cut!>,'jesRelativeJEREC1':<!LimitGeneral|replace_cut!>,'jesRelativeJEREC2':<!LimitGeneral|replace_cut!>,'jesRelativeJERHF':<!LimitGeneral|replace_cut!>,'jesRelativePtBB':<!LimitGeneral|replace_cut!>,'jesRelativePtEC1':<!LimitGeneral|replace_cut!>,'jesRelativePtEC2':<!LimitGeneral|replace_cut!>,'jesRelativePtHF':<!LimitGeneral|replace_cut!>,'jesRelativeBal':<!LimitGeneral|replace_cut!>,'jesRelativeFSR':<!LimitGeneral|replace_cut!>,'jesRelativeStatFSR':<!LimitGeneral|replace_cut!>,'jesRelativeStatEC':<!LimitGeneral|replace_cut!>,'jesRelativeStatHF':<!LimitGeneral|replace_cut!>,'jesPileUpDataMC':<!LimitGeneral|replace_cut!>,'jesPileUpPtRef':<!LimitGeneral|replace_cut!>,'jesPileUpPtBB':<!LimitGeneral|replace_cut!>,'jesPileUpPtEC1':<!LimitGeneral|replace_cut!>,'jesPileUpPtEC2':<!LimitGeneral|replace_cut!>,'jesPileUpPtHF':<!LimitGeneral|replace_cut!>,'jesPileUpMuZero':<!LimitGeneral|replace_cut!>,'jesPileUpEnvelope':<!LimitGeneral|replace_cut!>,'jmr':<!LimitGeneral|replace_cut_jmr!>,'jms':<!LimitGeneral|replace_cut_jms!>,'unclustEn':<!LimitGeneral|replace_cut_unclustEn!>}
#sys_cut_suffix = {'default':<!LimitGeneral|replace_cut!>,'jesTotal':<!LimitGeneral|replace_cut!>,'jer':<!LimitGeneral|replace_cut_jer!>,'jerReg':<!LimitGeneral|replace_cut_jerReg!>,'jesAbsoluteStat':<!LimitGeneral|replace_cut!>,'jesAbsoluteScale':<!LimitGeneral|replace_cut!>,'jesAbsoluteFlavMap':<!LimitGeneral|replace_cut!>,'jesAbsoluteMPFBias':<!LimitGeneral|replace_cut!>,'jesFragmentation':<!LimitGeneral|replace_cut!>,'jesSinglePionECAL':<!LimitGeneral|replace_cut!>,'jesSinglePionHCAL':<!LimitGeneral|replace_cut!>,'jesFlavorQCD':<!LimitGeneral|replace_cut!>,'jesRelativeJEREC1':<!LimitGeneral|replace_cut!>,'jesRelativeJEREC2':<!LimitGeneral|replace_cut!>,'jesRelativeJERHF':<!LimitGeneral|replace_cut!>,'jesRelativePtBB':<!LimitGeneral|replace_cut!>,'jesRelativePtEC1':<!LimitGeneral|replace_cut!>,'jesRelativePtEC2':<!LimitGeneral|replace_cut!>,'jesRelativePtHF':<!LimitGeneral|replace_cut!>,'jesRelativeBal':<!LimitGeneral|replace_cut!>,'jesRelativeFSR':<!LimitGeneral|replace_cut!>,'jesRelativeStatFSR':<!LimitGeneral|replace_cut!>,'jesRelativeStatEC':<!LimitGeneral|replace_cut!>,'jesRelativeStatHF':<!LimitGeneral|replace_cut!>,'jesPileUpDataMC':<!LimitGeneral|replace_cut!>,'jesPileUpPtRef':<!LimitGeneral|replace_cut!>,'jesPileUpPtBB':<!LimitGeneral|replace_cut!>,'jesPileUpPtEC1':<!LimitGeneral|replace_cut!>,'jesPileUpPtEC2':<!LimitGeneral|replace_cut!>,'jesPileUpPtHF':<!LimitGeneral|replace_cut!>,'jesPileUpMuZero':<!LimitGeneral|replace_cut!>,'jesPileUpEnvelope':<!LimitGeneral|replace_cut!>,'jmr':<!LimitGeneral|replace_cut_jmr!>,'jms':<!LimitGeneral|replace_cut_jms!>,'unclustEn':<!LimitGeneral|replace_cut_unclustEn!>}


sys_weight_corr = {}

decorrelate_sys_weight = {
    'CMS_LHE_weights_scale_muR_ZH':['ZH','ZH_lep_PTV_0_75_hbb','ZH_lep_PTV_75_150_hbb','ZH_lep_PTV_150_250_0J_hbb','ZH_lep_PTV_150_250_GE1J_hbb','ZH_lep_PTV_GT250_hbb'],
    'CMS_LHE_weights_scale_muR_WH':['WH','WH_lep_PTV_0_75_hbb','WH_lep_PTV_75_150_hbb','WH_lep_PTV_150_250_0J_hbb','WH_lep_PTV_150_250_GE1J_hbb','WH_lep_PTV_GT250_hbb'],
    'CMS_LHE_weights_scale_muR_ggZH':['ggZH','ggZH_lep_PTV_0_75_hbb','ggZH_lep_PTV_75_150_hbb','ggZH_lep_PTV_150_250_0J_hbb','ggZH_lep_PTV_150_250_GE1J_hbb','ggZH_lep_PTV_GT250_hbb'],
    'CMS_LHE_weights_scale_muR_TT':['TT'],
    'CMS_LHE_weights_scale_muR_Zj0b':['ZJets_0b'],
    'CMS_LHE_weights_scale_muR_Zj0b_udsg':['ZJets_0b_udsg'],
    'CMS_LHE_weights_scale_muR_Zj0b_c':['ZJets_0b_c'],
    'CMS_LHE_weights_scale_muR_Zj1b':['ZJets_1b'],
    'CMS_LHE_weights_scale_muR_Zj2b':['ZJets_2b'],
    'CMS_LHE_weights_scale_muR_Zjb':['ZJets_b'],
    'CMS_LHE_weights_scale_muR_Wj0b':['WJets_0b'],
    'CMS_LHE_weights_scale_muR_Wj0b_udsg':['WJets_0b_udsg'],
    'CMS_LHE_weights_scale_muR_Wj0b_c':['WJets_0b_c'],
    'CMS_LHE_weights_scale_muR_Wj1b':['WJets_1b'],
    'CMS_LHE_weights_scale_muR_Wj2b':['WJets_2b'],
    'CMS_LHE_weights_scale_muR_Wjb':['WJets_b'],
    'CMS_LHE_weights_scale_muR_QCD':['QCD'],
    'CMS_LHE_weights_scale_muF_ZH':['ZH','ZH_lep_PTV_0_75_hbb','ZH_lep_PTV_75_150_hbb','ZH_lep_PTV_150_250_0J_hbb','ZH_lep_PTV_150_250_GE1J_hbb','ZH_lep_PTV_GT250_hbb'],
    'CMS_LHE_weights_scale_muF_WH':['WH','WH_lep_PTV_0_75_hbb','WH_lep_PTV_75_150_hbb','WH_lep_PTV_150_250_0J_hbb','WH_lep_PTV_150_250_GE1J_hbb','WH_lep_PTV_GT250_hbb'],
    'CMS_LHE_weights_scale_muF_ggZH':['ggZH','ggZH_lep_PTV_0_75_hbb','ggZH_lep_PTV_75_150_hbb','ggZH_lep_PTV_150_250_0J_hbb','ggZH_lep_PTV_150_250_GE1J_hbb','ggZH_lep_PTV_GT250_hbb'],
    'CMS_LHE_weights_scale_muF_TT':['TT'],
    'CMS_LHE_weights_scale_muF_Zj0b':['ZJets_0b'],
    'CMS_LHE_weights_scale_muF_Zj0b_udsg':['ZJets_0b_udsg'],
    'CMS_LHE_weights_scale_muF_Zj0b_c':['ZJets_0b_c'],
    'CMS_LHE_weights_scale_muF_Zj1b':['ZJets_1b'],
    'CMS_LHE_weights_scale_muF_Zj2b':['ZJets_2b'],
    'CMS_LHE_weights_scale_muF_Zjb':['ZJets_b'],
    'CMS_LHE_weights_scale_muF_Wj0b':['WJets_0b'],
    'CMS_LHE_weights_scale_muF_Wj0b_udsg':['WJets_0b_udsg'],
    'CMS_LHE_weights_scale_muF_Wj0b_c':['WJets_0b_c'],
    'CMS_LHE_weights_scale_muF_Wj1b':['WJets_1b'],
    'CMS_LHE_weights_scale_muF_Wj2b':['WJets_2b'],
    'CMS_LHE_weights_scale_muF_Wjb':['WJets_b'],
    'CMS_LHE_weights_scale_muF_QCD':['QCD'],
    }

sys_cut_include = []


[Cuts]

# --------------------------------------------------------------------------------------------------
# MVA training 
# --------------------------------------------------------------------------------------------------
TrainCut = !((event%%2)==0||isData)
EvalCut = ((event%%2)==0||isData)

btagcut = <!General|btag1!> > 0.18
dphicut = abs(TVector2::Phi_mpi_pi(<!Cuts|dijet_phi!>-<!Cuts|METphi!>)) > 2.5

# --------------------------------------------------------------------------------------------------
# Overlap RESOLVED / BOOSTED 
# --------------------------------------------------------------------------------------------------

# where to place the overlap between BOOSTED and RESOLVED analysis
#OverlapResolvedBoosted = BOOSTED
#OverlapResolvedBoosted = RESOLVED
#OverlapResolvedBoosted = SR_A
OverlapResolvedBoosted = SR_B

resolvedJets = (hJidx[0]>-1&&hJidx[1]>-1)
boostedJets  = (Hbb_fjidx>-1)

# isResolved should be required for all resolved regions and isBoosted for all boosted regions
#isResolved_BOOSTED  = (<!.|resolvedJets!> && (!<!Cuts|all_BOOST!>))

# flag isBoosted = <!Cuts|all_BOOST!>
isResolved_BOOSTED  = (<!.|resolvedJets!> && !(boostedCR||boostedSR))
isResolved_RESOLVED = (<!.|resolvedJets!>)
isResolved_SR_A     = (<!.|resolvedJets!> && (hJidx[0]>-1&&hJidx[1]>-1) && (!(boostedCR||boostedSR)||(resolvedSR&&boostedCR)))
isResolved_SR_B     = (<!.|resolvedJets!> && !(boostedSR&&!resolvedSR))
isResolved_VZ_SR_B  = (<!.|resolvedJets!> && !(boostedSR_VZ&&!resolvedSR_VZ))  
isResolved_False    = <!.|isResolved_<!.|OverlapResolvedBoosted!>!>
isResolved_True     = <!.|isResolved_VZ_<!.|OverlapResolvedBoosted!>!>
isResolved          = (<!.|isResolved_<!General|VZ_optimize!>!>)

isBoosted_BOOSTED   = (<!.|boostedJets!>)
isBoosted_RESOLVED  = (<!.|boostedJets!> && !(resolvedCR||resolvedSR))
isBoosted_SR_A      = (<!.|boostedJets!> && !(!(boostedCR||boostedSR)||(resolvedSR&&boostedCR)))
isBoosted_SR_B      = (<!.|boostedJets!> && (!(resolvedSR||resolvedCR)||(boostedSR&&resolvedCR)))
isBoosted_VZ_SR_B   = (<!.|boostedJets!> && (!(resolvedSR_VZ||resolvedCR_VZ)||(boostedSR_VZ&&resolvedCR_VZ)))
isBoosted_False     = <!.|isBoosted_<!.|OverlapResolvedBoosted!>!>
isBoosted_True      = <!.|isBoosted_VZ_<!.|OverlapResolvedBoosted!>!>
isBoosted           = (<!.|isBoosted_<!General|VZ_optimize!>!>)

# essential branches which are always kept when skimming, even though they are not strictly needed for given cuts/variables
[Branches]
keep_branches = ['*BDT*','*DNN*','bTagWeight*','btagWeight*','dPhiLepMet','DY_specialWeight','Electron_mva*','electron*','eTrigSFWeight_doubleEle80x','event','EWKW','EWKwVJets','FitCorr','FitCorr*','fixedGridRhoFastjetAll','GenB*','GenJet_eta','GenJet_hadronFlavour','GenJet_numBHadrons','GenJet_pt','GenJetAK8_nBhadrons','GenPart*','genWeight','GenWZQuark_pdgId','H_eta','H_mass','H_mass_jerReg*','H_mass_noFSR','H_phi','H_pt','H_pt_noFSR','hJidx','HLT_Ele23_Ele12_CaloIdL_TrackIdL_Iso*','HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL','HLT_Ele32_WPTight_Gsf_L1DoubleEG','HLT_IsoMu27','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass*','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8','HLT_PFMET120_PFMHT120_IDTight','HLT_PFMET120_PFMHT120_IDTight_PFHT60','is*','isData','Jet_btag*','Jet_eta','Jet_lepFilter','Jet_jetId','Jet_puId','Jet_mass','Jet_phi','Jet_Pt','Jet_PtReg','Jet_PtReg*','kinFit*','LHE_*','LHE_HT','LHE_Nb','LHE_Nc','LHE_Njets','LHE_Nuds','LHE_Vpt','LHE_weights_scale_wgt','LHEScaleWeight','luminosityBlock','MET_phi','MET_Pt','MET_pt','minDphiJetMet','muonSF*','muTrigSFWeight_doublemu','nAddJet*','nFSRrecovered','nGenBs','nGenStatus2bHad','Pileup_nTrueInt','PrefireWeight','puWeight','puWeight*','puWeightDown','puWeightUp','run','sampleIndex','SoftActivity*','Sum$(Jet_PtReg>30&&abs(Jet_eta)<2.4&&Jet_puId==7&&Jet_jetId>0&&Jet_lepFilter>0)','V_*','vLidx','Vtype','weight','weight*','DoubleMu*','nGen*','top_mass2_05_neutrino*','top_mass2_05_top','METFix*','resolved*','boosted*','Hbb_fjidx']

