[SLURM]
#options = --exclude=t3wn52,t3wn53,t3wn54,t3wn55,t3wn56,t3wn57,t3wn58 

[General]
Debug = True

merge = True
weightexpression = 1
lumi = 58830 
mergeCachingSize = 3

# V5 ntuples
#electronMVA80 = Electron_mvaFall17Iso_WP80 
#electronMVA90 = Electron_mvaFall17Iso_WP90
# V11 ntuples
electronMVA80 = Electron_mvaFall17V2Iso_WP80 
electronMVA90 = Electron_mvaFall17V2Iso_WP90

electronMVA = <!General|electronMVA80!>

MVAtype = DNN
dataset = 2018

# which dataset use for TT control region. both have been tested to yield very similar TT scale factors and not too different event yields!
# HIG16044 analysis: MET dataset used, HIG18016: SingleLepton used
#TTdataset = SingleLepton
TTdataset = MET


#-------------------------------------------------
# Sample Groups, Subsamples, and Subsample Cuts
#-------------------------------------------------
# Scale Factors

SFmethod = OFF
#SFmethod = 2017

SF_QCD_OFF   = 1.0
SF_TT_OFF    = 1.0
SF_Wjl_OFF   = 1.0
SF_Wjc_OFF   = 1.0
SF_Wj1b_OFF  = 1.0
SF_Wj2b_OFF  = 1.0
SF_Zjl_OFF   = 1.0
SF_Zjc_OFF   = 1.0
SF_Zj1b_OFF  = 1.0
SF_Zj2b_OFF  = 1.0

SF_QCD_2017    = 1.0 
SF_TT_2017     = 0.972 
SF_Wjl_2017    = 1.076
SF_Wj1b_2017   = 1.426
SF_Wj2b_2017   = 0.996
SF_Zjl_2017    = 1.006
SF_Zj1b_2017   = 1.743
SF_Zj2b_2017   = 1.367

SF_QCD_Multi   = 1.0
SF_TT_Multi    = 0.966284
SF_Wjl_Multi   = 0.928864
SF_Wj1b_Multi  = 2.51244
SF_Wj2b_Multi  = 0.694641
SF_Zjl_Multi   = 1.01962
SF_Zj1b_Multi  = 0.769048
SF_Zj2b_Multi  = 1.05447

#SF_QCD   = <!General|SF_QCD_<!General|SFmethod!>!> 
#SF_TT    = <!General|SF_TT_<!General|SFmethod!>!> 
#SF_Wjl   = <!General|SF_Wjl_<!General|SFmethod!>!>
#SF_Wj1b  = <!General|SF_Wj1b_<!General|SFmethod!>!>
#SF_Wj2b  = <!General|SF_Wj2b_<!General|SFmethod!>!>
#SF_Zjl   = <!General|SF_Zjl_<!General|SFmethod!>!>
#SF_Zj1b  = <!General|SF_Zj1b_<!General|SFmethod!>!>
#SF_Zj2b  = <!General|SF_Zj2b_<!General|SFmethod!>!>
#
#SF_WJets = [<!General|SF_Wjl!>, <!General|SF_Wj1b!>, <!General|SF_Wj2b!>]
#SF_ZJets = [<!General|SF_Zjl!>, <!General|SF_Zj1b!>, <!General|SF_Zj2b!>]
#
[Configuration]
# general config
channel       = Zvv
TreeCopierPSI = True
files_per_job = 30
nprocesses    = 0

run_locally   = False

# NanoAOD format
treeName            = Events
#countTreeName       = genEventSumw_
AllowDuplicateTrees = True
countsFromAutoPU    = False
haddTargetNumEvents = 16000

[SubmitOptions]
# increase memory for sys step (for kinematic fit)
submitScriptSpecialOptions = {'sysnew': ' -l h_vmem=6g '}


[Prep]
#VHbb = ['Prep.Clean', 'Prep.Selection', 'VHbbCommon.isData','VHbbCommon.isSignal','VHbbCommon.isWH','VHbbCommon.HeppyStyleGen','VHbbCommon.genBstatus','VHbbCommon.SampleGroup']
#Clean = Drop.Drop(dropBranches=['HLT_*','TrigObj_*','nTrigObj','SubJet_*','nSubJet','Photon_*','nPhoton','Tau_*','nTau','nGenVisTau','GenVisTau_*'],keepBranches=['HLT_Ele23_Ele12_CaloIdL_TrackIdL_Iso*','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass*','HLT_PFMET120_PFMHT120_IDTight','HLT_PFMET120_PFMHT120_IDTight_PFHT60','HLT_Ele32_WPTight_Gsf_L1DoubleEG','HLT_IsoMu27','HLT_Ele32_WPTight_Gsf','HLT_IsoMu24'])
#VHbb = ['VHbbCommon.Clean', 'Prep.Selection', 'VHbbCommon.isData','VHbbCommon.isSignal','VHbbCommon.isWH','VHbbCommon.HeppyStyleGen','VHbbCommon.genBstatus','VHbbCommon.SampleGroup']
Step1           = ['VHbbCommon.Clean','VHbbCommon.JetSmearer','VHbbCommon.JECcorrelator','Prep.LeptonSelection']
LeptonSelection = VHbbSelection.VHbbSelection(year="2018", channels=["Znn"], idWmn=None, idWen=None, skipJetSelection=True, vpt0lep=130.0, vpt1lep=110.0, vpt2lep=75.0)

Step2           = ['VHbbCommon.METXY','VHbbCommon.mSD_scale_res_shift','Prep.Selection', 'VHbbCommon.isData','VHbbCommon.isSignal','VHbbCommon.isWH','VHbbCommon.HeppyStyleGen','VHbbCommon.genBstatus','VHbbCommon.vLeptons']

VHbb = ['VHbbCommon.Clean','VHbbCommon.JetSmearer','VHbbCommon.METXY', 'VHbbCommon.mSD_scale_res_shift', 'Prep.Selection', 'VHbbCommon.isData','VHbbCommon.isSignal','VHbbCommon.isWH','VHbbCommon.HeppyStyleGen','VHbbCommon.genBstatus','VHbbCommon.vLeptons']
Selection = VHbbSelection.VHbbSelection(year="2018", channels=["Znn"])

[Sys]

all = ['VHbbCommon.EWKweights', 'VHbbCommon.BTagSF', 'VHbbCommon.HiggsReco', 'VHbbCommon.isGGZH', 'VHbbCommon.vLeptons', 'Sys.newBranches', 'Sys.fill1','Sys.fill2','Sys.fill3', 'VHbbCommon.LOtoNLOweight', 'VHbbCommon.TTweights', 'VHbbCommon.DYspecialWeight','VHbbCommon.JetPUIDSF','Sys.metTriggerSF','VHbbCommon.DoubleBtagSF']
all2 = ['VHbbCommon.isBoosted','VHbbCommon.isBoostedVZ','VHbbCommon.SampleGroup']

test = ['VHbbCommon.JECcorrelator_2018_mSD_fix']

#all = ['VHbbCommon.EWKweights', 'VHbbCommon.BTagSF', 'VHbbCommon.HiggsReco', 'VHbbCommon.isGGZH', 'VHbbCommon.vLeptons', 'Sys.newBranches', 'Sys.fill1','Sys.fill2','Sys.fill3', 'VHbbCommon.LOtoNLOweight', 'VHbbCommon.TTweights', 'VHbbCommon.DYspecialWeight','VHbbCommon.JetPUIDSF','Sys.metTriggerSF','Sys.PUweight','VHbbCommon.DoubleBtagSF']


# add weights/scale factors
metTriggerSF    = METtriggerFromWS.METtriggerFromWS(workspace="/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zvv/2018/metsf/vhbb_metsf.root", fName="met_trig_sf120_2018", metCut=120.0)

# for TT CR
electronSF = ElectronSFfromJSON.ElectronSFfromJSON(jsonFiles=['/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Wlv/Electrons/IDs2018passingMVA94Xwp80iso.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Wlv/Electrons/Trig2018passingSingleEle.json', 'data/Wlv/Electrons/ScaleFactor_etracker_80x.json'], branchName='electronSF',channel='Wlv',year=2018)
muonSF = MuonSFfromJSON.MuonSFfromJSON(jsonFiles=['/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Wlv/Muons/vhbb_SingleMuon_EfficienciesAndSF.json'], branchName='muonSF',channel='Wlv',year=2018)
PUweight = PUweight.PUweight(fileNameData='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/PileupHistogram-goldenJSON-13tev-2018-69200ub-100bins.root',fileNameMC='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/mc_pu.root',fileNameDataUp='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/PileupHistogram-goldenJSON-13tev-2018-72400ub-100bins.root',fileNameDataDown='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/PileupHistogram-goldenJSON-13tev-2018-66000ub-100bins.root',puWeightName='puWeight')

# new branches
newBranches = BranchTools.TreeFormulas({
    'dPhiMetTkMet':     'abs(TVector2::Phi_mpi_pi(MET_Phi-TkMET_phi))',
    'dPhiVH':           'abs(TVector2::Phi_mpi_pi(V_phi-H_phi))',
    'dPhiMetH':         'abs(TVector2::Phi_mpi_pi(MET_Phi-H_phi))',
    'nVetoElectrons':   {'formula': 'Sum$(Electron_pt>6.5&&abs(Electron_eta)<2.5&&Electron_pfRelIso03_all<0.4&&abs(Electron_dz)<0.2&&abs(Electron_dxy)<0.05&&Electron_lostHits<1.0)', 'type': 'i'},
    'nVetoMuons':       {'formula': 'Sum$(Muon_pt>4.5&&abs(Muon_eta)<2.4&&Muon_pfRelIso04_all<0.4&&abs(Muon_dz)<0.2&&abs(Muon_dxy)<0.05)', 'type': 'i'},
    })

newBranches2 = BranchTools.TreeFormulas({     
    'isZnn_01': {'formula': 'isZnn&&(event %% 4 == 0 || event %% 4 == 1)', 'type': 'f'},
    'isZnn_23': {'formula': 'isZnn&&(event %% 4 == 2 || event %% 4 == 3)', 'type': 'f'},
    'isZnn_lt319077': {'formula': 'isZnn&&(run<319077)', 'type': 'f'},
    'isZnn_gt319077': {'formula': 'isZnn&&(run>319077)', 'type': 'f'},
    })

newBranches3 = BranchTools.TreeFormulas({     
    'isZnn_lt319077': {'formula': 'isZnn&&(run<319077)', 'type': 'f'},
    'isZnn_gt319077': {'formula': 'isZnn&&(run>=319077)', 'type': 'f'},
    })
# new branches
#newBranchesZvv = newBranchesZvv.newBranchesZvv(year='2018')
#newBranches = BranchTools.TreeFormulas({
#    'hJets_pt_reg_max': 'Alt$(max(Jet_PtReg[hJidx[0]],Jet_PtReg[hJidx[1]]),0)',
#    'hJets_pt_reg_min': 'Alt$(min(Jet_PtReg[hJidx[0]],Jet_PtReg[hJidx[1]]),0)',
#    'hJets_pt_reg_0':   'Alt$(Jet_PtReg[hJidx[0]],0)',
#    'hJets_pt_reg_1':   'Alt$(Jet_PtReg[hJidx[1]],0)',
#    'hJets_btag_0':     'Alt$(Jet_btagDeepB[hJidx[0]],0)',
#    'hJets_btag_1':     'Alt$(Jet_btagDeepB[hJidx[1]],0)',
#    'nAddJetQCD':       {'formula': 'Sum$(abs(TVector2::Phi_mpi_pi(Jet_phi-V_phi))<0.5&&Jet_Pt>30&&Jet_puId>0&&Jet_lepFilter)', 'type': 'i'},
#    'nAddJet30':        {'formula': 'Sum$(Jet_Pt>30&&abs(Jet_eta)<2.5&&Jet_puId>0&&Jet_lepFilter&&Iteration$!=Alt$(hJidx[0],0)&&Iteration$!=Alt$(hJidx[1],0))', 'type': 'i'},
#    'minDphiJetMet':    'Alt$(Min$(abs(TVector2::Phi_mpi_pi(Jet_phi[hJidx]-MET_Phi))),0)',
#    'dPhiMetTkMet':     'abs(TVector2::Phi_mpi_pi(MET_Phi-TkMET_phi))',
#    'dPhiVH':           'abs(TVector2::Phi_mpi_pi(V_phi-H_phi))',
#    'dPhiMetH':         'abs(TVector2::Phi_mpi_pi(MET_Phi-H_phi))',
#    'nVetoElectrons':   {'formula': 'Sum$(Electron_pt>6.5&&abs(Electron_eta)<2.5&&Electron_pfRelIso03_all<0.4&&abs(Electron_dz)<0.2&&abs(Electron_dxy)<0.05&&Electron_lostHits<1.0)', 'type': 'i'},
#    'nVetoMuons':       {'formula': 'Sum$(Muon_pt>4.5&&abs(Muon_eta)<2.4&&Muon_pfRelIso04_all<0.4&&abs(Muon_dz)<0.2&&abs(Muon_dxy)<0.05)', 'type': 'i'},
#    })
#
# fill branches with a default if they don't exist to have the same branches everywhere afterwards
#  this will avoid problems when hadding single files
fill1 = BranchTools.DefaultIfNotExisting(branchName='HLT_PFMET120_PFMHT120_IDTight',branchType='O',defaultValue=0)
fill2 = BranchTools.DefaultIfNotExisting(branchName='HLT_PFMET120_PFMHT120_IDTight_PFHT60',branchType='O',defaultValue=0)
fill3 = BranchTools.DefaultIfNotExisting(branchName='LHE_HT',branchType='f',defaultValue=0)
fill4 = BranchTools.DefaultIfNotExisting(branchName='HLT_Ele32_WPTight_Gsf_L1DoubleEG',branchType='O',defaultValue=0)
fill5 = BranchTools.DefaultIfNotExisting(branchName='HLT_IsoMu27',branchType='O',defaultValue=0)

aJidx = aJidx.aJidx()

[Eval]
all = ['Eval.DNN', 'Eval.CRDNN', 'Eval.CRDNN_high', 'Eval.VV_DNN', 'Eval.VV_CRDNN', 'Eval.VV_CRDNN_med', 'Eval.VV_CRDNN_high']
#all = ['Eval.DNN', 'Eval.CRDNN', 'Eval.CRDNN_high', 'Eval.VV_DNN', 'Eval.VV_CRDNN', 'Eval.VV_CRDNN_med', 'Eval.VV_CRDNN_high', 'Eval.BDT_Zvv_BOOSTFinal_wdB', 'Eval.VV_BDT_Zvv_BOOSTFinal_wdB' ]

allstxs = ['Eval.DNN_med_0j','Eval.DNN_med_ge1j','Eval.DNN_high','Eval.CRDNN_med_0j','Eval.CRDNN_med_ge1j','Eval.CRDNN_high']

# DNNs
VH       = ['Eval.DNN', 'Eval.CRDNN_med', 'Eval.CRDNN_high', 'Eval.VV_DNN', 'Eval.VV_CRDNN_med', 'Eval.VV_CRDNN_high']
#VH       = ['Eval.DNN', 'Eval.CRDNN_med', 'Eval.CRDNN_high', 'Eval.VV_DNN', 'Eval.VV_CRDNN_med', 'Eval.VV_CRDNN_high', 'Eval.VH_BDT_Zvv_BOOST', 'Eval.VZ_BDT_Zvv_BOOST']
reBDT    = ['Eval.VH_BDT_Zvv_BOOST', 'Eval.VZ_BDT_Zvv_BOOST','VHbbCommon.isBoosted','VHbbCommon.isBoostedVZ']
VH2018   = ['Eval.DNN','Eval.CRDNN_med_0j','Eval.CRDNN_med_ge1j','Eval.CRDNN_high','Eval.CRDNN','Eval.VV_DNN','Eval.VV_CRDNN_med_0j','Eval.VV_CRDNN_med_ge1j','Eval.VV_CRDNN_high','Eval.VV_CRDNN','Eval.BDT_Zvv_BOOSTFinal_wdB','Eval.VV_BDT_Zvv_BOOSTFinal_wdB']
DNN      = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='SR_medhigh_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')
DNN_med_0j      = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='SR_med_Znn_0j',condition='hJidx[0]>-1&&hJidx[1]>-1')
DNN_med_ge1j      = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='SR_med_Znn_ge1j',condition='hJidx[0]>-1&&hJidx[1]>-1')
DNN_high      = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='SR_high_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')

CRDNN    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Zhf_medhigh_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')
CRDNN_med    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Zhf_med_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')
CRDNN_med_0j    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Zhf_med_Znn_0j',condition='hJidx[0]>-1&&hJidx[1]>-1')
CRDNN_med_ge1j    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Zhf_med_Znn_ge1j',condition='hJidx[0]>-1&&hJidx[1]>-1')
CRDNN_high    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Zhf_high_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')

# multi
multiDNN = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Multi_medhigh_Znn')

# VV
VV_DNN       = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_SR_medhigh_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')

VV_CRDNN    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_Zhf_medhigh_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')
VV_CRDNN_med    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_Zhf_med_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')
VV_CRDNN_med_0j    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_Zhf_med_Znn_0j',condition='hJidx[0]>-1&&hJidx[1]>-1')
VV_CRDNN_med_ge1j    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_Zhf_med_Znn_ge1j',condition='hJidx[0]>-1&&hJidx[1]>-1')
VV_CRDNN_high    = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='VV_Zhf_high_Znn',condition='hJidx[0]>-1&&hJidx[1]>-1')

# mjj
mjj      = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='Mjj_SR_medhigh_Znn')

# include total weight as a branch (this now includes weight cross section to lumi!)
weightAsBranch = WeightAsBranch.WeightAsBranch()

#boosted BDT
VH_BDT_Zvv_BOOST = tmvaEvaluator.tmvaEvaluator(mvaName='BDT_Zvv_BOOSTFinal_wdB_withFullResolvedFeatures_2018_fix',condition='Hbb_fjidx>-1') 
VZ_BDT_Zvv_BOOST = tmvaEvaluator.tmvaEvaluator(mvaName='VZBDT_Zvv_BOOSTFinal_wdB_withFullResolvedFeatures_2018',condition='Hbb_fjidx>-1') 

VH_BDT_branchName = BDT_Zvv_BOOSTFinal_wdB_withFullResolvedFeatures_2018_fix
VZ_BDT_branchName = VZBDT_Zvv_BOOSTFinal_wdB_withFullResolvedFeatures_2018


#[Analysis]
#tag = 13TeV

#[systematics]
#systematics = Nominal jer_Up jer_Down jerReg_Up jerReg_Down jesAbsoluteStat_Up jesAbsoluteStat_Down jesAbsoluteScale_Up jesAbsoluteScale_Down jesAbsoluteFlavMap_Up jesAbsoluteFlavMap_Down jesAbsoluteMPFBias_Up jesAbsoluteMPFBias_Down jesFragmentation_Up jesFragmentation_Down jesSinglePionECAL_Up jesSinglePionECAL_Down jesSinglePionHCAL_Up jesSinglePionHCAL_Down jesFlavorQCD_Up jesFlavorQCD_Down jesRelativeJEREC1_Up jesRelativeJEREC1_Down jesRelativeJEREC2_Up jesRelativeJEREC2_Down jesRelativeJERHF_Up jesRelativeJERHF_Down jesRelativePtBB_Up jesRelativePtBB_Down jesRelativePtEC1_Up jesRelativePtEC1_Down jesRelativePtEC2_Up jesRelativePtEC2_Down jesRelativePtHF_Up jesRelativePtHF_Down jesRelativeBal_Up jesRelativeBal_Down jesRelativeFSR_Up jesRelativeFSR_Down jesRelativeStatFSR_Up jesRelativeStatFSR_Down jesRelativeStatEC_Up jesRelativeStatEC_Down jesRelativeStatHF_Up jesRelativeStatHF_Down jesPileUpDataMC_Up jesPileUpDataMC_Down jesPileUpPtRef_Up jesPileUpPtRef_Down jesPileUpPtBB_Up jesPileUpPtBB_Down jesPileUpPtEC1_Up jesPileUpPtEC1_Down jesPileUpPtEC2_Up jesPileUpPtEC2_Down jesPileUpPtHF_Up jesPileUpPtHF_Down jesPileUpMuZero_Up jesPileUpMuZero_Down jesPileUpEnvelope_Up jesPileUpEnvelope_Down jms_Up jms_Down jmr_Up jmr_Down
#added systematics for boosted analysis (jmr, jms)




#-------------------------------------------------
# Compiled Libraries

[VHbbNameSpace]
library = <!Directories|vhbbpath!>/interface/VHbbNameSpace_h.so

#-------------------------------------------------
# MC Weights

[Weights]
useSpecialWeight = True

weightQCD        = 1.0 
weightEWK        = EWKw[0] 
weightNLO        = weightLOtoNLO_LHEVptV5

# inside FitCorr[0]
weightTT         = 1.0
weightPU         = (puWeight)
#bTagWeight       = (1.0+<!General|DeepCSVweightApplies!>*(-1.0+bTagWeightDeepCSV))
bTagWeight       = (1.0+<!General|resolvedBtagWeightApplies!>*(-1.0+bTagWeight<!General|btagMethod!>))
weight_mettrigSF = weight_mettrigSF
FitCorr          = FitCorr[0]

weightJetPUID    = weightJetPUID
# if useSpecialWeight is set to True, specialweight is evaluated on the fly when creating datacards/plots, if it is set to False, it is read from the tree
stitchingWeights_False  = DY_specialWeight
stitchingWeights_True   = 1.0
stitchingWeights        = (<!Weights|stitchingWeights_<!.|useSpecialWeight!>!>)
weightNaddJetsResidual  = 1.0 
doubleBtagWeight        = (1.0+<!General|DeepAK8weightApplies!>*(-1.0+bTagWeightDoubleB)) 

MET_phi_data_cut        = (1+ (0.34482*(MET_Phi < -0.70 && MET_Phi > -1.86) - 1*(MET_Phi < -0.70 && MET_Phi > -1.86)))

weightF = genWeight * <!Weights|stitchingWeights!> * <!Weights|weightPU!> *  <!Weights|bTagWeight!> * <!Weights|weightQCD!> * <!Weights|weightEWK!> * <!Weights|weightNLO!> * <!Weights|weightTT!>  * <!Weights|MET_phi_data_cut!> * <!Weights|weightJetPUID!> *  <!Weights|weight_mettrigSF!> * <!Weights|doubleBtagWeight!>

weight_noBTag    = (<!.|weightF!>)/(<!Weights|bTagWeight!>)
weight_noPU      = genWeight * <!Weights|stitchingWeights!> * <!Weights|bTagWeight!> * <!Weights|weightQCD!> * <!Weights|weightEWK!> * <!Weights|weightNLO!> * <!Weights|weightTT!>  * <!Weights|MET_phi_data_cut!> * <!Weights|weightJetPUID!> *  <!Weights|weight_mettrigSF!> * <!Weights|doubleBtagWeight!>
#weight_noLepSF   = (<!.|weightF!>)/(<!Weights|leptonWeight!>) 
weight_noEWK     = (<!.|weightF!>)/(<!Weights|weightEWK!>)
weight_noNLO     = (<!.|weightF!>)/(<!Weights|weightNLO!>) 

#weight_noNLO =     genWeight  * <!Weights|weightPU!> *  <!Weights|bTagWeight!> * <!Weights|weightQCD!> * <!Weights|weightEWK!> * <!Weights|weightTT!> * <!Weights|stitchingWeights!>  * <!Weights|MET_phi_data_cut!> * <!Weights|weightJetPUID!> *  <!Weights|weight_mettrigSF!>  *<!Weights|doubleBtagWeight!> 
#weight_noBTag =    genWeight  * <!Weights|weightPU!> * <!Weights|weightQCD!> * <!Weights|weightEWK!> * <!Weights|weightNLO!> * <!Weights|weightTT!> * <!Weights|stitchingWeights!>  * <!Weights|MET_phi_data_cut!> * <!Weights|weightJetPUID!> *  <!Weights|weight_mettrigSF!> 
#weight_noPU =      genWeight  *  <!Weights|bTagWeight!> * <!Weights|weightQCD!> * <!Weights|weightEWK!> * <!Weights|weightNLO!> * <!Weights|weightTT!> * <!Weights|stitchingWeights!>  * <!Weights|MET_phi_data_cut!> * <!Weights|weightJetPUID!> *  <!Weights|weight_mettrigSF!> * <!Weights|doubleBtagWeight!>
#weight_noEWK =     genWeight  * <!Weights|weightPU!> *  <!Weights|bTagWeight!> * <!Weights|weightQCD!> * <!Weights|weightNLO!> * <!Weights|weightTT!> * <!Weights|stitchingWeights!>  * <!Weights|MET_phi_data_cut!> * <!Weights|weightJetPUID!> *  <!Weights|weight_mettrigSF!>  * <!Weights|doubleBtagWeight!>
#weight_noFitCorr = genWeight  * <!Weights|weightPU!> *  <!Weights|bTagWeight!> * <!Weights|weightQCD!> * <!Weights|weightEWK!> * <!Weights|weightNLO!> * <!Weights|weightTT!> * <!Weights|stitchingWeights!>  * <!Weights|MET_phi_data_cut!> * <!Weights|weightJetPUID!> *  <!Weights|weight_mettrigSF!> 


CMS_vhbb_ttbar_nAddJets_Up   = <!Weights|weightF!>*<!Weights|weightNaddJetsResidual!>
CMS_vhbb_ttbar_nAddJets_Down = <!Weights|weightF!>/<!Weights|weightNaddJetsResidual!>

CMS_vhbb_jetPUID_Up   = <!Weights|weightF!>/<!Weights|weightJetPUID!>*weightJetPUID_Up
CMS_vhbb_jetPUID_Down = <!Weights|weightF!>/<!Weights|weightJetPUID!>*weightJetPUID_Down

#LOtoNLO etajj
CMS_vhbb_vjetnlodetajjrw_13TeV_UP:        <!Weights|weight_noNLO!>*(1.0 + 2.0*(<!Weights|weightNLO!> - 1.0))
CMS_vhbb_vjetnlodetajjrw_13TeV_DOWN:      <!Weights|weight_noNLO!>

CMS_vhbb_vjetnlodetajjrw_13TeV_Zj0b_UP:   <!Weights|weight_noNLO!>*(1.0 + 2.0*(<!Weights|weightNLO!> - 1.0))
CMS_vhbb_vjetnlodetajjrw_13TeV_Zj0b_DOWN: <!Weights|weight_noNLO!>
CMS_vhbb_vjetnlodetajjrw_13TeV_Zj1b_UP:   <!Weights|weight_noNLO!>*(1.0 + 2.0*(<!Weights|weightNLO!> - 1.0))
CMS_vhbb_vjetnlodetajjrw_13TeV_Zj1b_DOWN: <!Weights|weight_noNLO!>
CMS_vhbb_vjetnlodetajjrw_13TeV_Zj2b_UP:   <!Weights|weight_noNLO!>*(1.0 + 2.0*(<!Weights|weightNLO!> - 1.0))
CMS_vhbb_vjetnlodetajjrw_13TeV_Zj2b_DOWN: <!Weights|weight_noNLO!>

# don't use NLO weight for Z+jet to NuNu samples, only W+jets:
#V2
CMS_vhbb_vjetnlovptrw_p0_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0+ (sampleIndex>=4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV2_p0_Up) + (sampleIndex>=15000&&sampleIndex<16500)*(-1.0+weightLOtoNLO_2016))
CMS_vhbb_vjetnlovptrw_p0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0+ (sampleIndex>=4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV2_p0_Down) + (sampleIndex>=15000&&sampleIndex<16500)*(-1.0+weightLOtoNLO_2016))
CMS_vhbb_vjetnlovptrw_p1_13TeV_UP   = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0+ (sampleIndex>=4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV2_p1_Up) + (sampleIndex>=15000&&sampleIndex<16500)*(-1.0+weightLOtoNLO_2016))
CMS_vhbb_vjetnlovptrw_p1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0+ (sampleIndex>=4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV2_p1_Down) + (sampleIndex>=15000&&sampleIndex<16500)*(-1.0+weightLOtoNLO_2016))

# don't use NLO weight for Z+jet to NuNu samples, only W+jets:
# V3
CMS_vhbb_vjetnlovptrw_naddjet0_p0_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet0_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet0_p0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet0_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet0_p1_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet0_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet0_p1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet0_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet1_p0_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet1_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet1_p0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet1_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet1_p1_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet1_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet1_p1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet1_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet2_p0_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet2_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet2_p0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet2_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet2_p1_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet2_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet2_p1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet2_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet3_p0_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet3_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet3_p0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet3_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet3_p1_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet3_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet3_p1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet3_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet4_p0_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet4_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet4_p0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet4_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet4_p1_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet4_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet4_p1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet4_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet5_p0_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet5_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet5_p0_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet5_p1_Down))
CMS_vhbb_vjetnlovptrw_naddjet5_p1_13TeV_UP =   <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet5_p0_Up))
CMS_vhbb_vjetnlovptrw_naddjet5_p1_13TeV_DOWN = <!Weights|weightF!>/<!Weights|weightNLO!>*(1.0 + (sampleIndex> =4000&&sampleIndex<6000)*(-1.0+weightLOtoNLO_LHEVptV3_naddjet5_p1_Down))


[Branches]
;branch that should always be kept in the Nutples
keep_branches = ['event','is*','run', 'sampleIndex', 'LHE_weights_scale_wgt','isData','muTrigSFWeight_doublemu','weight_SF_LooseID','weight_SF_LooseISO','weight_SF_TRK','eTrigSFWeight_doubleEle80x','weight_SF_LooseIDnISO','weight_SF_Lepton','GenJet_pt','GenJet_eta','GenJet_numBHadrons','GenWZQuark_pdgId','weight_SF_LooseIDnISO','weight_SF_LooseIDnISO_B','weight_SF_LooseIDnISO_E','sb_weight_ZeeBDT_highpt','sb_weight_ZuuBDT_highpt','sb_weight_ZeeBDT_lowpt','sb_weight_ZuuBDT_lowpt','sb_weight_ZeeBDTVH_highpt','sb_weight_ZuuBDTVH_highpt','sb_weight_ZeeBDTVH_lowpt','sb_weight_ZuuBDTVH_lowpt','*BDT*','GenJet_hadronFlavour','nAddJet*','minDphiJetMet','Jet_PtReg','Jet_phi','Jet_eta','Jet_mass','MET_Pt','MET_pt','MET_phi','LHE_Nb','LHE_Vpt','nGenStatus2bHad','LHE_HT','LHEScaleWeight','*DNN*','nGenStatus2bHad','GenPart*','DY_specialWeight','weightLO*','H_pt','H_eta','H_mass','V_eta','V_phi','V_pt','V_mass','Jet_btagDeepB[hJidx[0]]','Jet_btagDeepB[hJidx[1]]','hJidx[0]','hJidx[1]','Jet_PtReg[hJidx[0]]','Jet_PtReg[hJidx[1]]','Sum$(Jet_PtReg>30&&abs(Jet_eta)<2.4&&Jet_puId==7&&Jet_jetId>0&&Jet_lepFilter>0)','(H_pt/V_pt)','abs(Jet_eta[hJidx[0]]-Jet_eta[hJidx[1]])','abs(VHbb::deltaPhi(H_phi,V_phi))','MET_Pt','VHbb::deltaR(H_eta,H_phi,V_eta,V_phi)','H_pt_noFSR','H_mass_noFSR','HLT_PFMET120_PFMHT120_IDTight_PFHT60','HLT_PFMET120_PFMHT120_IDTight','HLT_Ele32_WPTight_Gsf_L1DoubleEG','HLT_IsoMu27','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8','HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL','FitCorr','FitCorr*','EWKW']

keep_branches_plot = ['BDT_Znn_HighPt','BDT_Znn_HighPt_log','bTagWeight','bTagWeightMoriondCMVA','bTagWeightCMVAV2_Moriond','CMVA_max','CMVA_max_zoom','CMVA_min','dEta_j1_j2','dPhi_HCMVAreg_MET','dPhi_j1_j2','dPhi_lep_MET','dPhi_MET_tkMET','dR_j1_j2','DY_specialWeight','DYw','eleweight','eTrigSFWeight_doubleEle80x','eTrigSFWeight_singleEle80','FitCorr','GenHiggsBoson','GenJet_eta','GenJet_numBHadrons','GenJet_pt','GenTop','GenTop_pt','GenVbosons_pdgId','GenVbosons_pt','genWeight','HCMVAV2_eta','HCMVAV2_mass','HCMVAV2_phi','HCMVAV2_pt','HCMVAV2_reg_eta','HCMVAV2_reg_mass','HCMVAV2_reg_phi','HCMVAV2_reg_pt','hJCMVAV2idx','hJetCMVAV2_pt_reg_0','hJetCMVAV2_pt_reg_1','HT','HT_puId0','HT_puId4','HVdPhi','is_ZH','Jet_btagCMVAV2','Jet_btagCSV','Jet_chHEF','Jet_corr','Jet_eta','Jet_id','Jet_leadTrackPt','Jet_leptonDeltaR','Jet_leptonPt','Jet_leptonPtRel','jet_mult_additional','jet_mult_central','Jet_neEmEF','Jet_neHEF','Jet_phi','Jet_pt','Jet_puId','Jet_vtxMass','Jet_vtxPt','LHE_HT','lheNb','lheV_pt','mass_HCMVAreg','max_pt_addjet','MET','met*','met_phi','met_pt','MET_sig','MHT','min_dPhi_j12_MET_puId4','min_dPhi_Jet_MET_pt20_puId4','min_dPhi_Jet_MET_pt30_puId4','min_MET_MHT','muTrigSFWeight_doublemu','muTrigSFWeight_singlemu','muweight','nGenHiggsBoson','nGenStatus2bHad','nGenTop','nGenVbosons','nPVs','nselLeptons','primary_vertices','pt_HCMVAreg','pt_j1','pt_j1reg','pt_j2','pt_j2reg','puId','puId_j1','puId_j2','puWeight','rho','rho ','softActivityVH_HT','softActivityVH_njets10','softActivityVH_njets2','softActivityVH_njets5','sumEt','tkMET','ttCls','TTW','V_new_eta','V_new_mass','V_new_phi','V_new_pt','vLeptons_new_eta','vLeptons_new_phi','vLeptons_new_pt','vLeptons_new_relIso04','vLeptons_SF_IdCutLoose','vLeptons_SFweight_HLT','Vtype','Vtype_new','VtypeSim','weight_SF_Lepton']


