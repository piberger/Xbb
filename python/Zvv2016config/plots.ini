[Samples]

# overwrite VV samples list since NLO is not available for 0-lepton and LO inclusive ZZ used as replacement
#ZZLF = 'ZZ_0b'
#ZZHF = 'ZZ_1b', 'ZZ_2b'

#VVLF = <!Samples|WWLF!>,<!Samples|WZLF!>,<!Samples|ZZLF!>
#VVHF = <!Samples|WWHF!>,<!Samples|WZHF!>,<!Samples|ZZHF!>

#VV = <!Samples|VVLF!>, <!Samples|VVHF!>


[Plot_general]
lumi = <!General|lumi!>
outputFormats = png, pdf, tex, root
drawNormalizedPlots = False
saveShapes = True
saveDataHistograms = False

# ------------------------------------------------------------------------------------------------------------------------------------------------------
# TEXT drawn on plots 
# ------------------------------------------------------------------------------------------------------------------------------------------------------
title= ["CMS","Work in progress"]
#additionalText = [time.strftime("%%Y-%%m-%%d")+" #font[82]{"+subprocess.check_output(['git','rev-parse','--short','HEAD']) + "}", "SF_TT: #color[4]{%%1.2f} SF_QCD: #color[4]{%%1.2f}"%%(eval(self.config.get('General','SF_TT')),eval(self.config.get('General','SF_QCD'))), "SF_Z0b: #color[4]{%%1.2f} SF_W0b: #color[4]{%%1.2f}"%%(eval(self.config.get('General','SF_Zjl')),eval(self.config.get('General','SF_Wjl'))), "SF_Z1b: #color[4]{%%1.2f} SF_W1b: #color[4]{%%1.2f}"%%(eval(self.config.get('General','SF_Zj1b')),eval(self.config.get('General','SF_Wj1b'))), "SF_Z2b: #color[4]{%%1.2f} SF_W2b: #color[4]{%%1.2f}"%%(eval(self.config.get('General','SF_Zj2b')),eval(self.config.get('General','SF_Wj2b'))), self.config.get('Cuts','additionalPlottingCut') if self.config.has_option('Cuts','additionalPlottingCut') else '']
additionalText = ["#color[17]{" +time.strftime("%%Y-%%m-%%d")+" #font[82]{"+subprocess.check_output(['git','rev-parse','--short','HEAD']) + "}}", "0-lepton channel", "overlap to <!Cuts|OverlapResolvedBoosted!>"]

# ------------------------------------------------------------------------------------------------------------------------------------------------------
# variables list 
# ------------------------------------------------------------------------------------------------------------------------------------------------------
# DNN inputs
vars_inputs    = Hj0_DeepCSV,Hj0_DeepCSV_WP,Hj1_DeepCSV,Hj1_DeepCSV_WP,Hmass,Hpt,MET,SA5,addJetMaxBtag_WP_0lep_addJetExists,addJetMaxPt_0lep_addJetExists,dPhi_H_MET,deltaEtabbWithFSR,deltaPhibbWithFSR,max_pt_fsr,minDeltaPhiJetMET_0lep_addJetExists,min_pt_fsr,nAddJets302p4puid7jetid2 
vars_general   = run,count,countNoWeight,countGenWeight,Vtype,parity,parityBDTDNN,LeptonSelection
vars_generator = LHE_Nb,LHE_HT,LHE_Vpt,NGenJets20,BmesonFromPS,BbaryonFromPS,ZJphaseSpace,ZJphaseSpace2,genEtabb,genEtabbPtJ
vars_jets      = HT30,Hj0_id,Hj1_id,Hj0_PUid,Hj1_PUid,Hj0_PUid_passTight,Hj1_PUid_passTight,Hj0_pt_reg,Hj1_pt_reg,Hj0_pt,Hj0_phi,Hj0_pt250,Hj1_pt,Hj1_phi,min_pt_reg,max_pt_reg,min_pt,max_pt,max_pt_fsr,min_pt_fsr,Hj0_DeepCSV,Hj1_DeepCSV,Hj0_DeepCSVzoom,Hj1_DeepCSVzoom,deltaRbb,deltaEtabb,Etabb0b,Etabb1b,Etabb2b,deltaPhibb,minDphiJetH,Hj0_eta,Hj1_eta,deltaRbbWithFSR,deltaEtabbWithFSR,deltaPhibbWithFSR
vars_jets2     = jet0_trk_pt,jet1_trk_pt,jet0_vtxMass,jet1_vtxMass,jet0_vtxpt,jet1_vtxpt,jet0_neEmEF,jet1_neEmEF,jet0_neEmEF,jet1_neEmEF,jet0_lepPtRel,jet1_lepPtRel,jet0_lepPt,jet1_lepPt,jet0_deltaR,jet1_deltaR
vars_addJets   = nAddJets302p5puid7,nAddJets302p5puid7noid,nAddJets302p4puid7,nAddJets302p4puid7noid,nAddJets302p4puid7_old,nAddJets252p5puid7,nAddJets202p5puid7,SA5,nAddJetsQCD
vars_MET       = MET,rawMET,tkMET,dPhi_MET_tkMET,METphi,minDphiMETjet,dPhi_H_MET,dPhiLepMet,tkmetphi,min_dPhi_Jet_MET_pt20_puId4,min_dPhi_Jet_MET_pt30_puId4,min_dPhi_j12_MET_puId4,min_dPhi_Jet_MET_pt20_puId7,min_dPhi_Jet_MET_pt30_puId7,min_dPhi_j12_MET_puId7,min_MET_MHT,METsigAdd
vars_j_MET     = nAddJetCloseToMET,nAddJetFarFromMET,nAddJetTransverse,nAddJetVeryCloseToMET,nAddJetVeryFarFromMET,deltaPhiVH_0lep,addJetMaxBtag_0lep,addJetMaxPt_0lep,minDeltaPhiJetMET_0lep,addJetMaxBtag_0lep_addJetExists,addJetMaxPt_0lep_addJetExists,minDeltaPhiJetMET_0lep_addJetExists
vars_H         = Hmass,Hmass80to160,Hmass_noFSR,Hpt,Hpt_noFSR,Heta,Hphi,nFSRrecovered
vars_V         = Vpt,Veta,Vphi,Vmass,Vmass_ttbar,Vmt,Vmt_ext
vars_VH        = deltaPhiVH,deltaPhiVH_1lep,deltaEtaVH,deltaRVH,ptBalance,invPtBalance
vars_pileup    = nVertices,rho
vars_weights   = genWeight,puWeight,EWKsignalWeight,METweight,bTagWeight,EWKweight,NLOweight,fitcorr
vars_special   = ZJB,LHE_VPT_TEXT,LHE_HT_TEXT
vars_DNN       = DNN, CRDNN_high, CRDNN_med
vars_dscr       = DNN, CRDNN_high, CRDNN_med, BDT

# standard sets
vars_full      = <!.|vars_inputs!>,<!.|vars_general!>,<!.|vars_generator!>,<!.|vars_jets!>,<!.|vars_addJets!>,<!.|vars_MET!>,<!.|vars_j_MET!>,<!.|vars_H!>,<!.|vars_V!>,<!.|vars_VH!>,<!.|vars_pileup!>,<!.|vars_weights!>,<!.|vars_special!>,<!.|vars_DNN!>,<!.|vars_jets2!>
vars_reduced   = <!.|vars_inputs!>,<!.|vars_DNN!>,Heta,Hphi,Hmass_0to500,rawMET,tkMET,dPhi_MET_tkMET,min_MET_MHT,tkmetphi,nVertices,rho,count,Vtype,parity,parityBDTDNN,countNoWeight



#----- Boosted analysis plots -----#
var_additionalBTAGALGOS: DeepAK8_bbVSlight,DeepAK8_bbVST 
var_Boost: Vpt,FatMass,FatPt,tau21,tau32,DoubleB,NaddJetsBoost,HVdPhiBoost,dRMMaxFatResolved,dRMinFatResolved,HT,Vpt
;var: <!Plot_general|var_additionalBTAGALGOS!>,<!Plot_general|var_Boost!>


# reduced list
#var            = count,Hj0_DeepCSV,Hj1_DeepCSV,Hj0_pt_reg,Hj1_pt_reg,Hmass,Hpt,MET,METphi,DNN,CRDNN_high,CRDNN_med,BDT,DeepAK8_bbVSlight,FatJet_mSD,FatJet_Pt,METphi_uncorrected
#var            = Vpt 
#var            = <!.|vars_inputs!>,count,MET,METphi
var            = VV_DNN

# ------------------------------------------------------------------------------------------------------------------------------------------------------
# data 
# ------------------------------------------------------------------------------------------------------------------------------------------------------
DataMET = ['MET']
DataSingleLepton = ['SingleElectron','SingleMuon']
Data = <!.|DataMET!>

# ------------------------------------------------------------------------------------------------------------------------------------------------------
# MC samples definitions 
# ------------------------------------------------------------------------------------------------------------------------------------------------------
allSIG = <!Samples|signals!>
Signal = <!Samples|signals!> 

# Background Samples
allBKG        = <!Samples|VV!>,<!Samples|ZJets!>,<!Samples|WJets!>,<!Samples|DY!>,<!Samples|TT!>,<!Samples|ST!>
allBKGwithQCD = <!Samples|VV!>,<!Samples|ZJets!>,<!Samples|WJets!>,<!Samples|DY!>,<!Samples|TT!>,<!Samples|ST!>,<!Samples|QCD!>

# to plot with QCD: --set='Plot_general.samples=[<!Plot_general|allBKGwithQCD!>,<!Plot_general|allSIG!>]'
samples = [<!Plot_general|allBKG!>,<!Plot_general|allSIG!>]

# diboson analysis
VVSIG = <!Samples|WZHF!>,<!Samples|ZZHF!>
VVBKG = <!Samples|WWHF!>,<!Samples|WWLF!>,<!Samples|WZLF!>,<!Samples|ZZLF!>,<!Samples|signals!>,<!Samples|ZJets!>,<!Samples|WJets!>,<!Samples|DY!>,<!Samples|TT!>,<!Samples|ST!>

# The ordering of sample groups in the plots.
setup = ZH,WH,ggZH,QCD,VVLF,VVHF,ZJets_0b,ZJets_0b_udsg,ZJets_0b_c,ZJets_1b,ZJets_2b,WJets_0b,WJets_0b_udsg,WJets_0b_c,WJets_1b,WJets_2b,TT,ST
setupLog = <!Plot_general|setup!>

setup_VV = VVHF,VVLF,ZH,WH,ggZH,QCD,ZJets_0b,ZJets_1b,ZJets_2b,WJets_0b,WJets_1b,WJets_2b,TT,ST


# use same colors and names in all channels
Group            = <!VHbbCommon|GroupNoSTXS!>
colorDict        = <!VHbbCommon|colorDict!>
typLegendDict    = <!VHbbCommon|typLegendDict!>


# when final skims are made, this branch is added with a fixed value per region
controlSample = {"HighPt_Signal": 0,"HighPt_TT":1,"HighPt_Zlight":2,"HighPt_Zbb":3}


# Add overflow bin in the plots
addOverFlow = False

# List of regions to be submitted in case of batch submission
#List         = SR_med_Znn_ge1j, SR_med_Znn_0j,SR_high_Znn 
#List         = <!.|ListVHLegacy!> 
List         = <!.|ListDNN!> 
#List         = <!.|ListBoosted!> 
#List         = SR_high_Znn_BOOST 
#List         = SR_med_Znn_ge1j, SR_med_Znn_0j, SR_high_Znn, Zhf_med_Znn, Zhf_med_Znn_0j, Zhf_med_Znn_ge1j 
#List         = SR_med_Znn_ge1j, SR_med_Znn_0j, SR_high_Znn, Zhf_med_Znn, Zhf_high_Znn, SR_medhigh_Znn  

ListVH       = SR_medhigh_Znn, ttbar_medhigh_Znn,Zlf_medhigh_Znn,Zhf_medhigh_Znn
ListVHLegacy = SR_med_Znn_ge1j, SR_med_Znn_0j, ttbar_med_Znn,Zlf_med_Znn,Zhf_med_Znn,SR_high_Znn,ttbar_high_Znn,Zlf_high_Znn,Zhf_high_Znn
ListBoosted  = SR_high_Znn_BOOST,ttbar_high_Znn_BOOST,Zlf_high_Znn_BOOST,Zhf_high_Znn_BOOST
ListTraining = SR_medhigh_Znn, Zhf_med_Znn_0j, Zhf_med_Znn_ge1j, Zhf_high_Znn
List_Mjj     = Mjj_0,Mjj_1,Mjj_2,Mjj_3
List_Multi   = Multi_medhigh_Znn
ListDNN  = VV_SR_med_Znn,VV_SR_high_Znn,VV_SR_high1_Znn,VV_SR_high2_Znn
# Possibility to add an additional blinding cut for data.
#addBlindingCut =

# General Options
Normalize = False
BDT_plot_blind = <!Plot_general|Blind!>
BDT_plot_log = False
plot_mass = ZH
Normalize = False
Blind = True

# blinding cuts individual for each variable to plot (refering to vhbbPlotDef.ini variable names
# for the standard DNN read the cut value from the bin list specified in the datacard config
defaultBlindCuts = {'Hmass': 'H_mass<90||H_mass>150','Hmass_noFSR': '{var}<90||{var}>150', 'DNN': '{var}<%%1.5f'%%<!dc:SR_medhigh_Znn|rebin_list!>[9], 'multiDNN0J':'{var}<8', 'multiDNN1J':'{var}<8', 'multiDNN10':'{var}<17', 'multiDNN10raw': '{var}<9.73775', 'multiDNN10rawv2': '{var}<9.73775', 'multiDNN10rawv3': '{var}<9.73775','multiDNN13':'{var}<10.7','multiDNN':'{var}<10.6023','multiDNN_SIG': '{var}<10.5'}
blindCutsMulti = {'multiDNN_SIG': '{var}<10.5', 'Hmass':'{var}<110||{var}>140'}

#-------------------------------------------------
# High Pt Bin Regions

[Plot:Wlf_med_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]


[Plot:Whf_med_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]

[Plot:Zlf_med_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]

[Plot:Zlf_medhigh_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "Zlf" 

[Plot:Zhf_med_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]

[Plot:Zhf_medhigh_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "Zhf" 

[Plot:ttbar_med_Znn]
Datas_SingleLepton  = ["SingleElectron","SingleMuon"] 
Datas_MET           = ["MET"]
Datas               = <!.|Datas_<!General|TTdataset!>!>
Normalize           = False
vars                = <!Plot_general|vars!>
log                 = False
blind               = False
Signal              = [<!Plot_general|Signal!>]

[Plot:ttbar_medhigh_Znn]
Datas_SingleLepton  = ["SingleElectron","SingleMuon"] 
Datas_MET           = ["MET"]
Datas               = <!.|Datas_<!General|TTdataset!>!>
Normalize           = False
vars                = <!Plot_general|vars!>
log                 = False
blind               = False
Signal              = [<!Plot_general|Signal!>]
additionalText      = "ttbar" 

[Plot:SR_med_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
blind     = False

[Plot:SR_medhigh_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
blind     = False
additionalText = "SR"

[Plot:Zlf_high_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]

[Plot:Zhf_high_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]

[Plot:ttbar_high_Znn]
Datas_SingleLepton  = ["SingleElectron","SingleMuon"] 
Datas_MET           = ["MET"]
Datas               = <!.|Datas_<!General|TTdataset!>!>
Normalize           = False
vars                = <!Plot_general|vars!>
log                 = False
blind               = False
Signal              = [<!Plot_general|Signal!>]

[Plot:SR_high_Znn]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
blind     = False

# for test
[Plot:HighPt_Inclusive]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1

# mjj plot regions
[Plot:Mjj_0]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
blindCuts = <!Plot_general|defaultBlindCuts!>

[Plot:Mjj_1]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
blindCuts = <!Plot_general|defaultBlindCuts!>

[Plot:Mjj_2]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
blindCuts = <!Plot_general|defaultBlindCuts!>

[Plot:Mjj_3]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
blindCuts = <!Plot_general|defaultBlindCuts!>




# #add jet regions

[Plot:HighPt_0J]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1
blind     = True
blindCuts = <!Plot_general|defaultBlindCuts!> 

[Plot:HighPt_1J]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1
blind     = True
blindCuts = <!Plot_general|defaultBlindCuts!> 

[Plot:HighPt_01J]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1
blind     = True
blindCuts = <!Plot_general|defaultBlindCuts!> 

# multi classifier regions

[Plot:HighPt_Multi]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1
blind     = True
blindCuts = <!Plot_general|defaultBlindCuts!> 

[Plot:Multi_medhigh_Znn_VH]
subcut    = <!plotDef:multiDNN|relPath!> > 10.0 
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
blind     = True
blindCuts = <!Plot_general|blindCutsMulti!> 
additionalText = "MULTI SR"

[Plot:Multi_medhigh_Znn_Zbb]
subcut    = <!plotDef:multiDNN|relPath!> >= 5.0 && <!plotDef:multiDNN|relPath!> < 6.0
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "MULTI Z+bb"

[Plot:Multi_medhigh_Znn_Wbb]
subcut    = <!plotDef:multiDNN|relPath!> >= 2.0 && <!plotDef:multiDNN|relPath!> < 3.0 
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "MULTI W+bb"

[Plot:Multi_medhigh_Znn_Zb]
subcut    = <!plotDef:multiDNN|relPath!> >= 4.0 && <!plotDef:multiDNN|relPath!> < 5.0
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "MULTI Z+b"

[Plot:Multi_medhigh_Znn_Wb]
subcut    = <!plotDef:multiDNN|relPath!> >= 1.0 && <!plotDef:multiDNN|relPath!> < 2.0 
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "MULTI W+b"

[Plot:Multi_medhigh_Znn_TT]
subcut    = <!plotDef:multiDNN|relPath!> >= 7.0 && <!plotDef:multiDNN|relPath!> < 8.0
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "MULTI TT"

[Plot:Multi_medhigh_Znn_Zlight]
subcut    = <!plotDef:multiDNN|relPath!> >= 3.0 && <!plotDef:multiDNN|relPath!> < 4.0 
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "MULTI Z+light"

[Plot:Multi_medhigh_Znn_Wlight]
subcut    = <!plotDef:multiDNN|relPath!> >= 0.0 && <!plotDef:multiDNN|relPath!> < 1.0 
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
additionalText = "MULTI W+light"


[Plot:Multi_medhigh_Znn_VVHF]
subcut    = <!plotDef:multiDNN|relPath!> >= 9.0 && <!plotDef:multiDNN|relPath!> < 10.0 
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1
additionalText = "MULTI VV(HF)"

[Plot:Multi_medhigh_Znn_VVLF]
subcut    = <!plotDef:multiDNN|relPath!> >= 8.0 && <!plotDef:multiDNN|relPath!> < 9.0 
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1
additionalText = "MULTI VV(LF)"


[Plot:Znn_13TeV]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = ZvvBDTHighPt
log       = True
blind     = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1

# palceholder for post-fit plots
[Plot:Znn_Signal]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = None 
log       = True
blind     = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1

# palceholder for post-fit plots
[Plot:Znn_Background]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = None 
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]
cut       = 1

[Plot:Incl]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = None 
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]

[Plot:Inclusive]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = None 
log       = False
blind     = False
Signal    = [<!Plot_general|Signal!>]

[Plot:SR_high_Znn_BOOST]
Datas     = <!Plot_general|Data!>
Normalize = False
vars      = <!Plot_general|vars!>
log       = False
Signal    = [<!Plot_general|Signal!>]
blind     = True
blindCuts = <!Plot_general|defaultBlindCuts!>

